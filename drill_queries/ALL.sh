DRILL_QUERIES=("SELECT  cast(floor(((propagated_longitude/180) + 1)/2 * 4194304/8) * 8                                        AS bigint) AS px         ,cast(floor((ln(tan((90 + propagated_latitude) * 3.141592 / 360))/ 3.141592 + 1) / 2 * 4194304/ 8) * 8 AS bigint) AS py         ,LEAST((SUM(sum_cqi)/SUM(count_cqi)),15.0)                                                                        AS value         ,COUNT(*)                                                                                                         AS nsamples FROM dfs.\`ericsson-1011\` WHERE count_cqi <> 0  GROUP BY  px           ,py HAVING LEAST((SUM(sum_cqi)/SUM(count_cqi)), 15.0) IS NOT NULL;"
"SELECT  cast(floor(((propagated_longitude/180) + 1)/2 * 4194304/8) * 8                                        AS bigint) AS px         ,cast(floor((ln(tan((90 + propagated_latitude) * 3.141592 / 360))/ 3.141592 + 1) / 2 * 4194304/ 8) * 8 AS bigint) AS py         ,LEAST((SUM(sum_cqi)/SUM(count_cqi)),15.0)                                                                        AS value         ,COUNT(*)                                                                                                         AS nsamples FROM dfs.\`ericsson-1011\` WHERE count_cqi <> 0  GROUP BY  px           ,py HAVING LEAST((SUM(sum_cqi)/SUM(count_cqi)), 15.0) IS NOT NULL;"
"SELECT  cast(floor(((propagated_longitude/180) + 1)/2 * 4194304/8) * 8                                        AS bigint) AS px         ,cast(floor((ln(tan((90 + propagated_latitude) * 3.141592 / 360))/ 3.141592 + 1) / 2 * 4194304/ 8) * 8 AS bigint) AS py         ,LEAST((SUM(sum_cqi)/SUM(count_cqi)),15.0)                                                                        AS value         ,COUNT(*)                                                                                                         AS nsamples FROM dfs.\`ericsson-1041\` WHERE count_cqi <> 0  GROUP BY  px           ,py HAVING LEAST((SUM(sum_cqi)/SUM(count_cqi)), 15.0) IS NOT NULL;"
"SELECT  cast(floor(((propagated_longitude/180) + 1)/2 * 4194304/8) * 8                                        AS bigint) AS px         ,cast(floor((ln(tan((90 + propagated_latitude) * 3.141592 / 360))/ 3.141592 + 1) / 2 * 4194304/ 8) * 8 AS bigint) AS py         ,LEAST((SUM(sum_cqi)/SUM(count_cqi)),15.0)                                                                        AS value         ,COUNT(*)                                                                                                         AS nsamples FROM dfs.\`ericsson-1041\` WHERE count_cqi <> 0  GROUP BY  px           ,py HAVING LEAST((SUM(sum_cqi)/SUM(count_cqi)), 15.0) IS NOT NULL;"
"SELECT  cast(floor(((propagated_longitude/180) + 1)/2 * 4194304/8) * 8                                        AS bigint) AS px         ,cast(floor((ln(tan((90 + propagated_latitude) * 3.141592 / 360))/ 3.141592 + 1) / 2 * 4194304/ 8) * 8 AS bigint) AS py         ,LEAST((SUM(sum_cqi)/SUM(count_cqi)),15.0)                                                                        AS value         ,COUNT(*)                                                                                                         AS nsamples FROM dfs.\`ericsson-1081\` WHERE count_cqi <> 0  GROUP BY  px           ,py HAVING LEAST((SUM(sum_cqi)/SUM(count_cqi)), 15.0) IS NOT NULL;"
"SELECT  cast(floor(((propagated_longitude/180) + 1)/2 * 4194304/8) * 8                                        AS bigint) AS px         ,cast(floor((ln(tan((90 + propagated_latitude) * 3.141592 / 360))/ 3.141592 + 1) / 2 * 4194304/ 8) * 8 AS bigint) AS py         ,LEAST((SUM(sum_cqi)/SUM(count_cqi)),15.0)                                                                        AS value         ,COUNT(*)                                                                                                         AS nsamples FROM dfs.\`ericsson-1081\` WHERE count_cqi <> 0  GROUP BY  px           ,py HAVING LEAST((SUM(sum_cqi)/SUM(count_cqi)), 15.0) IS NOT NULL;"
"SELECT  cast(floor(((propagated_longitude/180) + 1)/2 * 4194304/8) * 8                                        AS bigint) AS px         ,cast(floor((ln(tan((90 + propagated_latitude) * 3.141592 / 360))/ 3.141592 + 1) / 2 * 4194304/ 8) * 8 AS bigint) AS py         ,LEAST((SUM(sum_cqi)/SUM(count_cqi)),15.0)                                                                        AS value         ,COUNT(*)                                                                                                         AS nsamples FROM dfs.\`ericsson-1121\` WHERE count_cqi <> 0  GROUP BY  px           ,py HAVING LEAST((SUM(sum_cqi)/SUM(count_cqi)), 15.0) IS NOT NULL;"
"SELECT  cast(floor(((propagated_longitude/180) + 1)/2 * 4194304/8) * 8                                        AS bigint) AS px         ,cast(floor((ln(tan((90 + propagated_latitude) * 3.141592 / 360))/ 3.141592 + 1) / 2 * 4194304/ 8) * 8 AS bigint) AS py         ,LEAST((SUM(sum_cqi)/SUM(count_cqi)),15.0)                                                                        AS value         ,COUNT(*)                                                                                                         AS nsamples FROM dfs.\`ericsson-1121\` WHERE count_cqi <> 0  GROUP BY  px           ,py HAVING LEAST((SUM(sum_cqi)/SUM(count_cqi)), 15.0) IS NOT NULL;"
"SELECT  cast(floor(((propagated_longitude/180) + 1)/2 * 4194304/8) * 8                                        AS bigint) AS px         ,cast(floor((ln(tan((90 + propagated_latitude) * 3.141592 / 360))/ 3.141592 + 1) / 2 * 4194304/ 8) * 8 AS bigint) AS py         ,LEAST((SUM(sum_cqi)/SUM(count_cqi)),15.0)                                                                        AS value         ,COUNT(*)                                                                                                         AS nsamples FROM dfs.\`ericsson-1241\` WHERE count_cqi <> 0  GROUP BY  px           ,py HAVING LEAST((SUM(sum_cqi)/SUM(count_cqi)), 15.0) IS NOT NULL;"
"SELECT  cast(floor(((propagated_longitude/180) + 1)/2 * 4194304/8) * 8                                        AS bigint) AS px         ,cast(floor((ln(tan((90 + propagated_latitude) * 3.141592 / 360))/ 3.141592 + 1) / 2 * 4194304/ 8) * 8 AS bigint) AS py         ,LEAST((SUM(sum_cqi)/SUM(count_cqi)),15.0)                                                                        AS value         ,COUNT(*)                                                                                                         AS nsamples FROM dfs.\`ericsson-1241\` WHERE count_cqi <> 0  GROUP BY  px           ,py HAVING LEAST((SUM(sum_cqi)/SUM(count_cqi)), 15.0) IS NOT NULL;"
"SELECT  cast(floor(((propagated_longitude/180) + 1)/2 * 4194304/8) * 8                                        AS bigint) AS px         ,cast(floor((ln(tan((90 + propagated_latitude) * 3.141592 / 360))/ 3.141592 + 1) / 2 * 4194304/ 8) * 8 AS bigint) AS py         ,LEAST((SUM(sum_cqi)/SUM(count_cqi)),15.0)                                                                        AS value         ,COUNT(*)                                                                                                         AS nsamples FROM dfs.\`ericsson-1481\` WHERE count_cqi <> 0  GROUP BY  px           ,py HAVING LEAST((SUM(sum_cqi)/SUM(count_cqi)), 15.0) IS NOT NULL;"
"SELECT  cast(floor(((propagated_longitude/180) + 1)/2 * 4194304/8) * 8                                        AS bigint) AS px         ,cast(floor((ln(tan((90 + propagated_latitude) * 3.141592 / 360))/ 3.141592 + 1) / 2 * 4194304/ 8) * 8 AS bigint) AS py         ,LEAST((SUM(sum_cqi)/SUM(count_cqi)),15.0)                                                                        AS value         ,COUNT(*)                                                                                                         AS nsamples FROM dfs.\`ericsson-1481\` WHERE count_cqi <> 0  GROUP BY  px           ,py HAVING LEAST((SUM(sum_cqi)/SUM(count_cqi)), 15.0) IS NOT NULL;"
"SELECT  cast(floor(((propagated_longitude/180) + 1)/2 * 4194304/8) * 8                                        AS bigint) AS px         ,cast(floor((ln(tan((90 + propagated_latitude) * 3.141592 / 360))/ 3.141592 + 1) / 2 * 4194304/ 8) * 8 AS bigint) AS py         ,LEAST((SUM(sum_cqi)/SUM(count_cqi)),15.0)                                                                        AS value         ,COUNT(*)                                                                                                         AS nsamples FROM dfs.\`ericsson-1661\` WHERE count_cqi <> 0  GROUP BY  px           ,py HAVING LEAST((SUM(sum_cqi)/SUM(count_cqi)), 15.0) IS NOT NULL;"
"SELECT  cast(floor(((propagated_longitude/180) + 1)/2 * 4194304/8) * 8                                        AS bigint) AS px         ,cast(floor((ln(tan((90 + propagated_latitude) * 3.141592 / 360))/ 3.141592 + 1) / 2 * 4194304/ 8) * 8 AS bigint) AS py         ,LEAST((SUM(sum_cqi)/SUM(count_cqi)),15.0)                                                                        AS value         ,COUNT(*)                                                                                                         AS nsamples FROM dfs.\`ericsson-1661\` WHERE count_cqi <> 0  GROUP BY  px           ,py HAVING LEAST((SUM(sum_cqi)/SUM(count_cqi)), 15.0) IS NOT NULL;"
"SELECT  cast(floor(((propagated_longitude/180) + 1)/2 * 4194304/8) * 8                                        AS bigint) AS px         ,cast(floor((ln(tan((90 + propagated_latitude) * 3.141592 / 360))/ 3.141592 + 1) / 2 * 4194304/ 8) * 8 AS bigint) AS py         ,LEAST((SUM(sum_cqi)/SUM(count_cqi)),15.0)                                                                        AS value         ,COUNT(*)                                                                                                         AS nsamples FROM dfs.\`ericsson-partitioned-1011\` WHERE count_cqi <> 0  GROUP BY  px           ,py HAVING LEAST((SUM(sum_cqi)/SUM(count_cqi)), 15.0) IS NOT NULL;"
"SELECT  cast(floor(((propagated_longitude/180) + 1)/2 * 4194304/8) * 8                                        AS bigint) AS px         ,cast(floor((ln(tan((90 + propagated_latitude) * 3.141592 / 360))/ 3.141592 + 1) / 2 * 4194304/ 8) * 8 AS bigint) AS py         ,LEAST((SUM(sum_cqi)/SUM(count_cqi)),15.0)                                                                        AS value         ,COUNT(*)                                                                                                         AS nsamples FROM dfs.\`ericsson-partitioned-1011\` WHERE count_cqi <> 0  GROUP BY  px           ,py HAVING LEAST((SUM(sum_cqi)/SUM(count_cqi)), 15.0) IS NOT NULL;"
"SELECT  cast(floor(((propagated_longitude/180) + 1)/2 * 4194304/8) * 8                                        AS bigint) AS px         ,cast(floor((ln(tan((90 + propagated_latitude) * 3.141592 / 360))/ 3.141592 + 1) / 2 * 4194304/ 8) * 8 AS bigint) AS py         ,LEAST((SUM(sum_cqi)/SUM(count_cqi)),15.0)                                                                        AS value         ,COUNT(*)                                                                                                         AS nsamples FROM dfs.\`ericsson-partitioned-1021\` WHERE count_cqi <> 0  GROUP BY  px           ,py HAVING LEAST((SUM(sum_cqi)/SUM(count_cqi)), 15.0) IS NOT NULL;"
"SELECT  cast(floor(((propagated_longitude/180) + 1)/2 * 4194304/8) * 8                                        AS bigint) AS px         ,cast(floor((ln(tan((90 + propagated_latitude) * 3.141592 / 360))/ 3.141592 + 1) / 2 * 4194304/ 8) * 8 AS bigint) AS py         ,LEAST((SUM(sum_cqi)/SUM(count_cqi)),15.0)                                                                        AS value         ,COUNT(*)                                                                                                         AS nsamples FROM dfs.\`ericsson-partitioned-1021\` WHERE count_cqi <> 0  GROUP BY  px           ,py HAVING LEAST((SUM(sum_cqi)/SUM(count_cqi)), 15.0) IS NOT NULL;"
"SELECT  cast(floor(((propagated_longitude/180) + 1)/2 * 4194304/8) * 8                                        AS bigint) AS px         ,cast(floor((ln(tan((90 + propagated_latitude) * 3.141592 / 360))/ 3.141592 + 1) / 2 * 4194304/ 8) * 8 AS bigint) AS py         ,LEAST((SUM(sum_cqi)/SUM(count_cqi)),15.0)                                                                        AS value         ,COUNT(*)                                                                                                         AS nsamples FROM dfs.\`ericsson-partitioned-1041\` WHERE count_cqi <> 0  GROUP BY  px           ,py HAVING LEAST((SUM(sum_cqi)/SUM(count_cqi)), 15.0) IS NOT NULL;"
"SELECT  cast(floor(((propagated_longitude/180) + 1)/2 * 4194304/8) * 8                                        AS bigint) AS px         ,cast(floor((ln(tan((90 + propagated_latitude) * 3.141592 / 360))/ 3.141592 + 1) / 2 * 4194304/ 8) * 8 AS bigint) AS py         ,LEAST((SUM(sum_cqi)/SUM(count_cqi)),15.0)                                                                        AS value         ,COUNT(*)                                                                                                         AS nsamples FROM dfs.\`ericsson-partitioned-1041\` WHERE count_cqi <> 0  GROUP BY  px           ,py HAVING LEAST((SUM(sum_cqi)/SUM(count_cqi)), 15.0) IS NOT NULL;"
"SELECT  cast(floor(((propagated_longitude/180) + 1)/2 * 4194304/8) * 8                                        AS bigint) AS px         ,cast(floor((ln(tan((90 + propagated_latitude) * 3.141592 / 360))/ 3.141592 + 1) / 2 * 4194304/ 8) * 8 AS bigint) AS py         ,LEAST((SUM(sum_cqi)/SUM(count_cqi)),15.0)                                                                        AS value         ,COUNT(*)                                                                                                         AS nsamples FROM dfs.\`ericsson-partitioned-1081\` WHERE count_cqi <> 0  GROUP BY  px           ,py HAVING LEAST((SUM(sum_cqi)/SUM(count_cqi)), 15.0) IS NOT NULL;"
"SELECT  cast(floor(((propagated_longitude/180) + 1)/2 * 4194304/8) * 8                                        AS bigint) AS px         ,cast(floor((ln(tan((90 + propagated_latitude) * 3.141592 / 360))/ 3.141592 + 1) / 2 * 4194304/ 8) * 8 AS bigint) AS py         ,LEAST((SUM(sum_cqi)/SUM(count_cqi)),15.0)                                                                        AS value         ,COUNT(*)                                                                                                         AS nsamples FROM dfs.\`ericsson-partitioned-1081\` WHERE count_cqi <> 0  GROUP BY  px           ,py HAVING LEAST((SUM(sum_cqi)/SUM(count_cqi)), 15.0) IS NOT NULL;"
"SELECT  cast(floor(((propagated_longitude/180) + 1)/2 * 4194304/8) * 8                                        AS bigint) AS px         ,cast(floor((ln(tan((90 + propagated_latitude) * 3.141592 / 360))/ 3.141592 + 1) / 2 * 4194304/ 8) * 8 AS bigint) AS py         ,LEAST((SUM(sum_cqi)/SUM(count_cqi)),15.0)                                                                        AS value         ,COUNT(*)                                                                                                         AS nsamples FROM dfs.\`ericsson-partitioned-1121\` WHERE count_cqi <> 0  GROUP BY  px           ,py HAVING LEAST((SUM(sum_cqi)/SUM(count_cqi)), 15.0) IS NOT NULL;"
"SELECT  cast(floor(((propagated_longitude/180) + 1)/2 * 4194304/8) * 8                                        AS bigint) AS px         ,cast(floor((ln(tan((90 + propagated_latitude) * 3.141592 / 360))/ 3.141592 + 1) / 2 * 4194304/ 8) * 8 AS bigint) AS py         ,LEAST((SUM(sum_cqi)/SUM(count_cqi)),15.0)                                                                        AS value         ,COUNT(*)                                                                                                         AS nsamples FROM dfs.\`ericsson-partitioned-1121\` WHERE count_cqi <> 0  GROUP BY  px           ,py HAVING LEAST((SUM(sum_cqi)/SUM(count_cqi)), 15.0) IS NOT NULL;"
"SELECT  cast(floor(((propagated_longitude/180) + 1)/2 * 4194304/8) * 8                                        AS bigint) AS px         ,cast(floor((ln(tan((90 + propagated_latitude) * 3.141592 / 360))/ 3.141592 + 1) / 2 * 4194304/ 8) * 8 AS bigint) AS py         ,LEAST((SUM(sum_cqi)/SUM(count_cqi)),15.0)                                                                        AS value         ,COUNT(*)                                                                                                         AS nsamples FROM dfs.\`ericsson-partitioned-1241\` WHERE count_cqi <> 0  GROUP BY  px           ,py HAVING LEAST((SUM(sum_cqi)/SUM(count_cqi)), 15.0) IS NOT NULL;"
"SELECT  cast(floor(((propagated_longitude/180) + 1)/2 * 4194304/8) * 8                                        AS bigint) AS px         ,cast(floor((ln(tan((90 + propagated_latitude) * 3.141592 / 360))/ 3.141592 + 1) / 2 * 4194304/ 8) * 8 AS bigint) AS py         ,LEAST((SUM(sum_cqi)/SUM(count_cqi)),15.0)                                                                        AS value         ,COUNT(*)                                                                                                         AS nsamples FROM dfs.\`ericsson-partitioned-1241\` WHERE count_cqi <> 0  GROUP BY  px           ,py HAVING LEAST((SUM(sum_cqi)/SUM(count_cqi)), 15.0) IS NOT NULL;"
"SELECT  cast(floor(((propagated_longitude/180) + 1)/2 * 4194304/8) * 8                                        AS bigint) AS px         ,cast(floor((ln(tan((90 + propagated_latitude) * 3.141592 / 360))/ 3.141592 + 1) / 2 * 4194304/ 8) * 8 AS bigint) AS py         ,LEAST((SUM(sum_cqi)/SUM(count_cqi)),15.0)                                                                        AS value         ,COUNT(*)                                                                                                         AS nsamples FROM dfs.\`ericsson-partitioned-1481\` WHERE count_cqi <> 0  GROUP BY  px           ,py HAVING LEAST((SUM(sum_cqi)/SUM(count_cqi)), 15.0) IS NOT NULL;"
"SELECT  cast(floor(((propagated_longitude/180) + 1)/2 * 4194304/8) * 8                                        AS bigint) AS px         ,cast(floor((ln(tan((90 + propagated_latitude) * 3.141592 / 360))/ 3.141592 + 1) / 2 * 4194304/ 8) * 8 AS bigint) AS py         ,LEAST((SUM(sum_cqi)/SUM(count_cqi)),15.0)                                                                        AS value         ,COUNT(*)                                                                                                         AS nsamples FROM dfs.\`ericsson-partitioned-1481\` WHERE count_cqi <> 0  GROUP BY  px           ,py HAVING LEAST((SUM(sum_cqi)/SUM(count_cqi)), 15.0) IS NOT NULL;"
"SELECT  t1.px             AS px        ,t1.py             AS py        ,SUM(num)          AS nsamples        ,SUM(num)/MAX(num) AS value FROM  (  SELECT  DISTINCT cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *4194304/8) *8           AS bigint) AS py  FROM dfs.\`ericsson-1012\`  ) AS t1, ( SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px        ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py        ,COUNT(*)                                                  AS num FROM dfs.\`ericsson-1012\` WHERE global_cellid IS NOT NULL  GROUP BY  global_cellid           ,px           ,py) AS t2 WHERE t1.px = t2.px  AND t1.py = t2.py  GROUP BY  t1.px           ,t1.py;"
"SELECT  t1.px             AS px        ,t1.py             AS py        ,SUM(num)          AS nsamples        ,SUM(num)/MAX(num) AS value FROM  (  SELECT  DISTINCT cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *4194304/8) *8           AS bigint) AS py  FROM dfs.\`ericsson-1012\`  ) AS t1, ( SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px        ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py        ,COUNT(*)                                                  AS num FROM dfs.\`ericsson-1012\` WHERE global_cellid IS NOT NULL  GROUP BY  global_cellid           ,px           ,py) AS t2 WHERE t1.px = t2.px  AND t1.py = t2.py  GROUP BY  t1.px           ,t1.py;"
"SELECT  t1.px             AS px        ,t1.py             AS py        ,SUM(num)          AS nsamples        ,SUM(num)/MAX(num) AS value FROM  (  SELECT  DISTINCT cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *4194304/8) *8           AS bigint) AS py  FROM dfs.\`ericsson-1042\`  ) AS t1, ( SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px        ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py        ,COUNT(*)                                                  AS num FROM dfs.\`ericsson-1042\` WHERE global_cellid IS NOT NULL  GROUP BY  global_cellid           ,px           ,py) AS t2 WHERE t1.px = t2.px  AND t1.py = t2.py  GROUP BY  t1.px           ,t1.py;"
"SELECT  t1.px             AS px        ,t1.py             AS py        ,SUM(num)          AS nsamples        ,SUM(num)/MAX(num) AS value FROM  (  SELECT  DISTINCT cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *4194304/8) *8           AS bigint) AS py  FROM dfs.\`ericsson-1042\`  ) AS t1, ( SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px        ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py        ,COUNT(*)                                                  AS num FROM dfs.\`ericsson-1042\` WHERE global_cellid IS NOT NULL  GROUP BY  global_cellid           ,px           ,py) AS t2 WHERE t1.px = t2.px  AND t1.py = t2.py  GROUP BY  t1.px           ,t1.py;"
"SELECT  t1.px             AS px        ,t1.py             AS py        ,SUM(num)          AS nsamples        ,SUM(num)/MAX(num) AS value FROM  (  SELECT  DISTINCT cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *4194304/8) *8           AS bigint) AS py  FROM dfs.\`ericsson-1082\`  ) AS t1, ( SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px        ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py        ,COUNT(*)                                                  AS num FROM dfs.\`ericsson-1082\` WHERE global_cellid IS NOT NULL  GROUP BY  global_cellid           ,px           ,py) AS t2 WHERE t1.px = t2.px  AND t1.py = t2.py  GROUP BY  t1.px           ,t1.py;"
"SELECT  t1.px             AS px        ,t1.py             AS py        ,SUM(num)          AS nsamples        ,SUM(num)/MAX(num) AS value FROM  (  SELECT  DISTINCT cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *4194304/8) *8           AS bigint) AS py  FROM dfs.\`ericsson-1082\`  ) AS t1, ( SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px        ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py        ,COUNT(*)                                                  AS num FROM dfs.\`ericsson-1082\` WHERE global_cellid IS NOT NULL  GROUP BY  global_cellid           ,px           ,py) AS t2 WHERE t1.px = t2.px  AND t1.py = t2.py  GROUP BY  t1.px           ,t1.py;"
"SELECT  t1.px             AS px        ,t1.py             AS py        ,SUM(num)          AS nsamples        ,SUM(num)/MAX(num) AS value FROM  (  SELECT  DISTINCT cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *4194304/8) *8           AS bigint) AS py  FROM dfs.\`ericsson-1122\`  ) AS t1, ( SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px        ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py        ,COUNT(*)                                                  AS num FROM dfs.\`ericsson-1122\` WHERE global_cellid IS NOT NULL  GROUP BY  global_cellid           ,px           ,py) AS t2 WHERE t1.px = t2.px  AND t1.py = t2.py  GROUP BY  t1.px           ,t1.py;"
"SELECT  t1.px             AS px        ,t1.py             AS py        ,SUM(num)          AS nsamples        ,SUM(num)/MAX(num) AS value FROM  (  SELECT  DISTINCT cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *4194304/8) *8           AS bigint) AS py  FROM dfs.\`ericsson-1122\`  ) AS t1, ( SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px        ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py        ,COUNT(*)                                                  AS num FROM dfs.\`ericsson-1122\` WHERE global_cellid IS NOT NULL  GROUP BY  global_cellid           ,px           ,py) AS t2 WHERE t1.px = t2.px  AND t1.py = t2.py  GROUP BY  t1.px           ,t1.py;"
"SELECT  t1.px             AS px        ,t1.py             AS py        ,SUM(num)          AS nsamples        ,SUM(num)/MAX(num) AS value FROM  (  SELECT  DISTINCT cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *4194304/8) *8           AS bigint) AS py  FROM dfs.\`ericsson-1242\`  ) AS t1, ( SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px        ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py        ,COUNT(*)                                                  AS num FROM dfs.\`ericsson-1242\` WHERE global_cellid IS NOT NULL  GROUP BY  global_cellid           ,px           ,py) AS t2 WHERE t1.px = t2.px  AND t1.py = t2.py  GROUP BY  t1.px           ,t1.py;"
"SELECT  t1.px             AS px        ,t1.py             AS py        ,SUM(num)          AS nsamples        ,SUM(num)/MAX(num) AS value FROM  (  SELECT  DISTINCT cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *4194304/8) *8           AS bigint) AS py  FROM dfs.\`ericsson-1242\`  ) AS t1, ( SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px        ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py        ,COUNT(*)                                                  AS num FROM dfs.\`ericsson-1242\` WHERE global_cellid IS NOT NULL  GROUP BY  global_cellid           ,px           ,py) AS t2 WHERE t1.px = t2.px  AND t1.py = t2.py  GROUP BY  t1.px           ,t1.py;"
"SELECT  t1.px             AS px        ,t1.py             AS py        ,SUM(num)          AS nsamples        ,SUM(num)/MAX(num) AS value FROM  (  SELECT  DISTINCT cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *4194304/8) *8           AS bigint) AS py  FROM dfs.\`ericsson-1482\`  ) AS t1, ( SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px        ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py        ,COUNT(*)                                                  AS num FROM dfs.\`ericsson-1482\` WHERE global_cellid IS NOT NULL  GROUP BY  global_cellid           ,px           ,py) AS t2 WHERE t1.px = t2.px  AND t1.py = t2.py  GROUP BY  t1.px           ,t1.py;"
"SELECT  t1.px             AS px        ,t1.py             AS py        ,SUM(num)          AS nsamples        ,SUM(num)/MAX(num) AS value FROM  (  SELECT  DISTINCT cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *4194304/8) *8           AS bigint) AS py  FROM dfs.\`ericsson-1482\`  ) AS t1, ( SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px        ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py        ,COUNT(*)                                                  AS num FROM dfs.\`ericsson-1482\` WHERE global_cellid IS NOT NULL  GROUP BY  global_cellid           ,px           ,py) AS t2 WHERE t1.px = t2.px  AND t1.py = t2.py  GROUP BY  t1.px           ,t1.py;"
"SELECT  t1.px             AS px        ,t1.py             AS py        ,SUM(num)          AS nsamples        ,SUM(num)/MAX(num) AS value FROM  (  SELECT  DISTINCT cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *4194304/8) *8           AS bigint) AS py  FROM dfs.\`ericsson-1662\`  ) AS t1, ( SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px        ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py        ,COUNT(*)                                                  AS num FROM dfs.\`ericsson-1662\` WHERE global_cellid IS NOT NULL  GROUP BY  global_cellid           ,px           ,py) AS t2 WHERE t1.px = t2.px  AND t1.py = t2.py  GROUP BY  t1.px           ,t1.py;"
"SELECT  t1.px             AS px        ,t1.py             AS py        ,SUM(num)          AS nsamples        ,SUM(num)/MAX(num) AS value FROM  (  SELECT  DISTINCT cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *4194304/8) *8           AS bigint) AS py  FROM dfs.\`ericsson-1662\`  ) AS t1, ( SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px        ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py        ,COUNT(*)                                                  AS num FROM dfs.\`ericsson-1662\` WHERE global_cellid IS NOT NULL  GROUP BY  global_cellid           ,px           ,py) AS t2 WHERE t1.px = t2.px  AND t1.py = t2.py  GROUP BY  t1.px           ,t1.py;"
"SELECT  t1.px             AS px        ,t1.py             AS py        ,SUM(num)          AS nsamples        ,SUM(num)/MAX(num) AS value FROM  (  SELECT  DISTINCT cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *4194304/8) *8           AS bigint) AS py  FROM dfs.\`ericsson-partitioned-1011\`  ) AS t1, ( SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px        ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py        ,COUNT(*)                                                  AS num FROM dfs.\`ericsson-partitioned-1011\` WHERE global_cellid IS NOT NULL  GROUP BY  global_cellid           ,px           ,py) AS t2 WHERE t1.px = t2.px  AND t1.py = t2.py  GROUP BY  t1.px           ,t1.py;"
"SELECT  t1.px             AS px        ,t1.py             AS py        ,SUM(num)          AS nsamples        ,SUM(num)/MAX(num) AS value FROM  (  SELECT  DISTINCT cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *4194304/8) *8           AS bigint) AS py  FROM dfs.\`ericsson-partitioned-1011\`  ) AS t1, ( SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px        ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py        ,COUNT(*)                                                  AS num FROM dfs.\`ericsson-partitioned-1011\` WHERE global_cellid IS NOT NULL  GROUP BY  global_cellid           ,px           ,py) AS t2 WHERE t1.px = t2.px  AND t1.py = t2.py  GROUP BY  t1.px           ,t1.py;"
"SELECT  t1.px             AS px        ,t1.py             AS py        ,SUM(num)          AS nsamples        ,SUM(num)/MAX(num) AS value FROM  (  SELECT  DISTINCT cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *4194304/8) *8           AS bigint) AS py  FROM dfs.\`ericsson-partitioned-1021\`  ) AS t1, ( SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px        ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py        ,COUNT(*)                                                  AS num FROM dfs.\`ericsson-partitioned-1021\` WHERE global_cellid IS NOT NULL  GROUP BY  global_cellid           ,px           ,py) AS t2 WHERE t1.px = t2.px  AND t1.py = t2.py  GROUP BY  t1.px           ,t1.py;"
"SELECT  t1.px             AS px        ,t1.py             AS py        ,SUM(num)          AS nsamples        ,SUM(num)/MAX(num) AS value FROM  (  SELECT  DISTINCT cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *4194304/8) *8           AS bigint) AS py  FROM dfs.\`ericsson-partitioned-1021\`  ) AS t1, ( SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px        ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py        ,COUNT(*)                                                  AS num FROM dfs.\`ericsson-partitioned-1021\` WHERE global_cellid IS NOT NULL  GROUP BY  global_cellid           ,px           ,py) AS t2 WHERE t1.px = t2.px  AND t1.py = t2.py  GROUP BY  t1.px           ,t1.py;"
"SELECT  t1.px             AS px        ,t1.py             AS py        ,SUM(num)          AS nsamples        ,SUM(num)/MAX(num) AS value FROM  (  SELECT  DISTINCT cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *4194304/8) *8           AS bigint) AS py  FROM dfs.\`ericsson-partitioned-1041\`  ) AS t1, ( SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px        ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py        ,COUNT(*)                                                  AS num FROM dfs.\`ericsson-partitioned-1041\` WHERE global_cellid IS NOT NULL  GROUP BY  global_cellid           ,px           ,py) AS t2 WHERE t1.px = t2.px  AND t1.py = t2.py  GROUP BY  t1.px           ,t1.py;"
"SELECT  t1.px             AS px        ,t1.py             AS py        ,SUM(num)          AS nsamples        ,SUM(num)/MAX(num) AS value FROM  (  SELECT  DISTINCT cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *4194304/8) *8           AS bigint) AS py  FROM dfs.\`ericsson-partitioned-1041\`  ) AS t1, ( SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px        ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py        ,COUNT(*)                                                  AS num FROM dfs.\`ericsson-partitioned-1041\` WHERE global_cellid IS NOT NULL  GROUP BY  global_cellid           ,px           ,py) AS t2 WHERE t1.px = t2.px  AND t1.py = t2.py  GROUP BY  t1.px           ,t1.py;"
"SELECT  t1.px             AS px        ,t1.py             AS py        ,SUM(num)          AS nsamples        ,SUM(num)/MAX(num) AS value FROM  (  SELECT  DISTINCT cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *4194304/8) *8           AS bigint) AS py  FROM dfs.\`ericsson-partitioned-1081\`  ) AS t1, ( SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px        ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py        ,COUNT(*)                                                  AS num FROM dfs.\`ericsson-partitioned-1081\` WHERE global_cellid IS NOT NULL  GROUP BY  global_cellid           ,px           ,py) AS t2 WHERE t1.px = t2.px  AND t1.py = t2.py  GROUP BY  t1.px           ,t1.py;"
"SELECT  t1.px             AS px        ,t1.py             AS py        ,SUM(num)          AS nsamples        ,SUM(num)/MAX(num) AS value FROM  (  SELECT  DISTINCT cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *4194304/8) *8           AS bigint) AS py  FROM dfs.\`ericsson-partitioned-1081\`  ) AS t1, ( SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px        ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py        ,COUNT(*)                                                  AS num FROM dfs.\`ericsson-partitioned-1081\` WHERE global_cellid IS NOT NULL  GROUP BY  global_cellid           ,px           ,py) AS t2 WHERE t1.px = t2.px  AND t1.py = t2.py  GROUP BY  t1.px           ,t1.py;"
"SELECT  t1.px             AS px        ,t1.py             AS py        ,SUM(num)          AS nsamples        ,SUM(num)/MAX(num) AS value FROM  (  SELECT  DISTINCT cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *4194304/8) *8           AS bigint) AS py  FROM dfs.\`ericsson-partitioned-1121\`  ) AS t1, ( SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px        ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py        ,COUNT(*)                                                  AS num FROM dfs.\`ericsson-partitioned-1121\` WHERE global_cellid IS NOT NULL  GROUP BY  global_cellid           ,px           ,py) AS t2 WHERE t1.px = t2.px  AND t1.py = t2.py  GROUP BY  t1.px           ,t1.py;"
"SELECT  t1.px             AS px        ,t1.py             AS py        ,SUM(num)          AS nsamples        ,SUM(num)/MAX(num) AS value FROM  (  SELECT  DISTINCT cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *4194304/8) *8           AS bigint) AS py  FROM dfs.\`ericsson-partitioned-1121\`  ) AS t1, ( SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px        ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py        ,COUNT(*)                                                  AS num FROM dfs.\`ericsson-partitioned-1121\` WHERE global_cellid IS NOT NULL  GROUP BY  global_cellid           ,px           ,py) AS t2 WHERE t1.px = t2.px  AND t1.py = t2.py  GROUP BY  t1.px           ,t1.py;"
"SELECT  t1.px             AS px        ,t1.py             AS py        ,SUM(num)          AS nsamples        ,SUM(num)/MAX(num) AS value FROM  (  SELECT  DISTINCT cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *4194304/8) *8           AS bigint) AS py  FROM dfs.\`ericsson-partitioned-1241\`  ) AS t1, ( SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px        ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py        ,COUNT(*)                                                  AS num FROM dfs.\`ericsson-partitioned-1241\` WHERE global_cellid IS NOT NULL  GROUP BY  global_cellid           ,px           ,py) AS t2 WHERE t1.px = t2.px  AND t1.py = t2.py  GROUP BY  t1.px           ,t1.py;"
"SELECT  t1.px             AS px        ,t1.py             AS py        ,SUM(num)          AS nsamples        ,SUM(num)/MAX(num) AS value FROM  (  SELECT  DISTINCT cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *4194304/8) *8           AS bigint) AS py  FROM dfs.\`ericsson-partitioned-1241\`  ) AS t1, ( SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px        ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py        ,COUNT(*)                                                  AS num FROM dfs.\`ericsson-partitioned-1241\` WHERE global_cellid IS NOT NULL  GROUP BY  global_cellid           ,px           ,py) AS t2 WHERE t1.px = t2.px  AND t1.py = t2.py  GROUP BY  t1.px           ,t1.py;"
"SELECT  t1.px             AS px        ,t1.py             AS py        ,SUM(num)          AS nsamples        ,SUM(num)/MAX(num) AS value FROM  (  SELECT  DISTINCT cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *4194304/8) *8           AS bigint) AS py  FROM dfs.\`ericsson-partitioned-1481\`  ) AS t1, ( SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px        ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py        ,COUNT(*)                                                  AS num FROM dfs.\`ericsson-partitioned-1481\` WHERE global_cellid IS NOT NULL  GROUP BY  global_cellid           ,px           ,py) AS t2 WHERE t1.px = t2.px  AND t1.py = t2.py  GROUP BY  t1.px           ,t1.py;"
"SELECT  t1.px             AS px        ,t1.py             AS py        ,SUM(num)          AS nsamples        ,SUM(num)/MAX(num) AS value FROM  (  SELECT  DISTINCT cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *4194304/8) *8           AS bigint) AS py  FROM dfs.\`ericsson-partitioned-1481\`  ) AS t1, ( SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px        ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py        ,COUNT(*)                                                  AS num FROM dfs.\`ericsson-partitioned-1481\` WHERE global_cellid IS NOT NULL  GROUP BY  global_cellid           ,px           ,py) AS t2 WHERE t1.px = t2.px  AND t1.py = t2.py  GROUP BY  t1.px           ,t1.py;"
"SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py         ,AVG(dl_tput)                                              AS value         ,COUNT(*)                                                  AS nsamples FROM dfs.\`ericsson-1014\` WHERE dl_tput IS NOT NULL  GROUP BY  px           ,py HAVING AVG(dl_tput) IS NOT NULL;"
"SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py         ,AVG(dl_tput)                                              AS value         ,COUNT(*)                                                  AS nsamples FROM dfs.\`ericsson-1014\` WHERE dl_tput IS NOT NULL  GROUP BY  px           ,py HAVING AVG(dl_tput) IS NOT NULL;"
"SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py         ,AVG(dl_tput)                                              AS value         ,COUNT(*)                                                  AS nsamples FROM dfs.\`ericsson-1044\` WHERE dl_tput IS NOT NULL  GROUP BY  px           ,py HAVING AVG(dl_tput) IS NOT NULL;"
"SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py         ,AVG(dl_tput)                                              AS value         ,COUNT(*)                                                  AS nsamples FROM dfs.\`ericsson-1044\` WHERE dl_tput IS NOT NULL  GROUP BY  px           ,py HAVING AVG(dl_tput) IS NOT NULL;"
"SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py         ,AVG(dl_tput)                                              AS value         ,COUNT(*)                                                  AS nsamples FROM dfs.\`ericsson-1084\` WHERE dl_tput IS NOT NULL  GROUP BY  px           ,py HAVING AVG(dl_tput) IS NOT NULL;"
"SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py         ,AVG(dl_tput)                                              AS value         ,COUNT(*)                                                  AS nsamples FROM dfs.\`ericsson-1084\` WHERE dl_tput IS NOT NULL  GROUP BY  px           ,py HAVING AVG(dl_tput) IS NOT NULL;"
"SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py         ,AVG(dl_tput)                                              AS value         ,COUNT(*)                                                  AS nsamples FROM dfs.\`ericsson-1124\` WHERE dl_tput IS NOT NULL  GROUP BY  px           ,py HAVING AVG(dl_tput) IS NOT NULL;"
"SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py         ,AVG(dl_tput)                                              AS value         ,COUNT(*)                                                  AS nsamples FROM dfs.\`ericsson-1124\` WHERE dl_tput IS NOT NULL  GROUP BY  px           ,py HAVING AVG(dl_tput) IS NOT NULL;"
"SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py         ,AVG(dl_tput)                                              AS value         ,COUNT(*)                                                  AS nsamples FROM dfs.\`ericsson-2244\` WHERE dl_tput IS NOT NULL  GROUP BY  px           ,py HAVING AVG(dl_tput) IS NOT NULL;"
"SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py         ,AVG(dl_tput)                                              AS value         ,COUNT(*)                                                  AS nsamples FROM dfs.\`ericsson-2244\` WHERE dl_tput IS NOT NULL  GROUP BY  px           ,py HAVING AVG(dl_tput) IS NOT NULL;"
"SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py         ,AVG(dl_tput)                                              AS value         ,COUNT(*)                                                  AS nsamples FROM dfs.\`ericsson-2484\` WHERE dl_tput IS NOT NULL  GROUP BY  px           ,py HAVING AVG(dl_tput) IS NOT NULL;"
"SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py         ,AVG(dl_tput)                                              AS value         ,COUNT(*)                                                  AS nsamples FROM dfs.\`ericsson-2484\` WHERE dl_tput IS NOT NULL  GROUP BY  px           ,py HAVING AVG(dl_tput) IS NOT NULL;"
"SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py         ,AVG(dl_tput)                                              AS value         ,COUNT(*)                                                  AS nsamples FROM dfs.\`ericsson-1664\` WHERE dl_tput IS NOT NULL  GROUP BY  px           ,py HAVING AVG(dl_tput) IS NOT NULL;"
"SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py         ,AVG(dl_tput)                                              AS value         ,COUNT(*)                                                  AS nsamples FROM dfs.\`ericsson-1664\` WHERE dl_tput IS NOT NULL  GROUP BY  px           ,py HAVING AVG(dl_tput) IS NOT NULL;"
"SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py         ,AVG(dl_tput)                                              AS value         ,COUNT(*)                                                  AS nsamples FROM dfs.\`ericsson-partitioned-1011\` WHERE dl_tput IS NOT NULL  GROUP BY  px           ,py HAVING AVG(dl_tput) IS NOT NULL;"
"SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py         ,AVG(dl_tput)                                              AS value         ,COUNT(*)                                                  AS nsamples FROM dfs.\`ericsson-partitioned-1011\` WHERE dl_tput IS NOT NULL  GROUP BY  px           ,py HAVING AVG(dl_tput) IS NOT NULL;"
"SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py         ,AVG(dl_tput)                                              AS value         ,COUNT(*)                                                  AS nsamples FROM dfs.\`ericsson-partitioned-1021\` WHERE dl_tput IS NOT NULL  GROUP BY  px           ,py HAVING AVG(dl_tput) IS NOT NULL;"
"SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py         ,AVG(dl_tput)                                              AS value         ,COUNT(*)                                                  AS nsamples FROM dfs.\`ericsson-partitioned-1021\` WHERE dl_tput IS NOT NULL  GROUP BY  px           ,py HAVING AVG(dl_tput) IS NOT NULL;"
"SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py         ,AVG(dl_tput)                                              AS value         ,COUNT(*)                                                  AS nsamples FROM dfs.\`ericsson-partitioned-1041\` WHERE dl_tput IS NOT NULL  GROUP BY  px           ,py HAVING AVG(dl_tput) IS NOT NULL;"
"SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py         ,AVG(dl_tput)                                              AS value         ,COUNT(*)                                                  AS nsamples FROM dfs.\`ericsson-partitioned-1041\` WHERE dl_tput IS NOT NULL  GROUP BY  px           ,py HAVING AVG(dl_tput) IS NOT NULL;"
"SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py         ,AVG(dl_tput)                                              AS value         ,COUNT(*)                                                  AS nsamples FROM dfs.\`ericsson-partitioned-1081\` WHERE dl_tput IS NOT NULL  GROUP BY  px           ,py HAVING AVG(dl_tput) IS NOT NULL;"
"SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py         ,AVG(dl_tput)                                              AS value         ,COUNT(*)                                                  AS nsamples FROM dfs.\`ericsson-partitioned-1081\` WHERE dl_tput IS NOT NULL  GROUP BY  px           ,py HAVING AVG(dl_tput) IS NOT NULL;"
"SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py         ,AVG(dl_tput)                                              AS value         ,COUNT(*)                                                  AS nsamples FROM dfs.\`ericsson-partitioned-1121\` WHERE dl_tput IS NOT NULL  GROUP BY  px           ,py HAVING AVG(dl_tput) IS NOT NULL;"
"SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py         ,AVG(dl_tput)                                              AS value         ,COUNT(*)                                                  AS nsamples FROM dfs.\`ericsson-partitioned-1121\` WHERE dl_tput IS NOT NULL  GROUP BY  px           ,py HAVING AVG(dl_tput) IS NOT NULL;"
"SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py         ,AVG(dl_tput)                                              AS value         ,COUNT(*)                                                  AS nsamples FROM dfs.\`ericsson-partitioned-1241\` WHERE dl_tput IS NOT NULL  GROUP BY  px           ,py HAVING AVG(dl_tput) IS NOT NULL;"
"SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py         ,AVG(dl_tput)                                              AS value         ,COUNT(*)                                                  AS nsamples FROM dfs.\`ericsson-partitioned-1241\` WHERE dl_tput IS NOT NULL  GROUP BY  px           ,py HAVING AVG(dl_tput) IS NOT NULL;"
"SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py         ,AVG(dl_tput)                                              AS value         ,COUNT(*)                                                  AS nsamples FROM dfs.\`ericsson-partitioned-1481\` WHERE dl_tput IS NOT NULL  GROUP BY  px           ,py HAVING AVG(dl_tput) IS NOT NULL;"
"SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py         ,AVG(dl_tput)                                              AS value         ,COUNT(*)                                                  AS nsamples FROM dfs.\`ericsson-partitioned-1481\` WHERE dl_tput IS NOT NULL  GROUP BY  px           ,py HAVING AVG(dl_tput) IS NOT NULL;"
"SELECT  DISTINCT px        ,py        ,value        ,nsamples FROM  (  SELECT  cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *1048576/8) *8  AS bigint) AS py         ,MIN(serving_pci)                                          AS value         ,rank() OVER (PARTITION BY cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint),cast(floor(precalculate_pixely *1048576/8) *8 AS bigint) ORDER BY AVG(serving_rsrp_mr) DESC,MIN(serving_pci) DESC) AS pos         ,SUM(COUNT(*)) OVER (PARTITION BY cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint),cast(floor(precalculate_pixely *1048576/8) *8 AS bigint)) AS nsamples  FROM dfs.\`ericsson-1018\`  WHERE global_cellid IS NOT NULL   AND serving_rsrp_mr IS NOT NULL   GROUP BY  px           ,py           ,global_cellid  HAVING AVG(serving_rsrp_mr) IS NOT NULL AND MIN(serving_pci) IS NOT NULL ) AS t WHERE t.pos = 1;"
"SELECT  DISTINCT px        ,py        ,value        ,nsamples FROM  (  SELECT  cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *1048576/8) *8  AS bigint) AS py         ,MIN(serving_pci)                                          AS value         ,rank() OVER (PARTITION BY cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint),cast(floor(precalculate_pixely *1048576/8) *8 AS bigint) ORDER BY AVG(serving_rsrp_mr) DESC,MIN(serving_pci) DESC) AS pos         ,SUM(COUNT(*)) OVER (PARTITION BY cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint),cast(floor(precalculate_pixely *1048576/8) *8 AS bigint)) AS nsamples  FROM dfs.\`ericsson-1018\`  WHERE global_cellid IS NOT NULL   AND serving_rsrp_mr IS NOT NULL   GROUP BY  px           ,py           ,global_cellid  HAVING AVG(serving_rsrp_mr) IS NOT NULL AND MIN(serving_pci) IS NOT NULL ) AS t WHERE t.pos = 1;"
"SELECT  DISTINCT px        ,py        ,value        ,nsamples FROM  (  SELECT  cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *1048576/8) *8  AS bigint) AS py         ,MIN(serving_pci)                                          AS value         ,rank() OVER (PARTITION BY cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint),cast(floor(precalculate_pixely *1048576/8) *8 AS bigint) ORDER BY AVG(serving_rsrp_mr) DESC,MIN(serving_pci) DESC) AS pos         ,SUM(COUNT(*)) OVER (PARTITION BY cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint),cast(floor(precalculate_pixely *1048576/8) *8 AS bigint)) AS nsamples  FROM dfs.\`ericsson-1048\`  WHERE global_cellid IS NOT NULL   AND serving_rsrp_mr IS NOT NULL   GROUP BY  px           ,py           ,global_cellid  HAVING AVG(serving_rsrp_mr) IS NOT NULL AND MIN(serving_pci) IS NOT NULL ) AS t WHERE t.pos = 1;"
"SELECT  DISTINCT px        ,py        ,value        ,nsamples FROM  (  SELECT  cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *1048576/8) *8  AS bigint) AS py         ,MIN(serving_pci)                                          AS value         ,rank() OVER (PARTITION BY cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint),cast(floor(precalculate_pixely *1048576/8) *8 AS bigint) ORDER BY AVG(serving_rsrp_mr) DESC,MIN(serving_pci) DESC) AS pos         ,SUM(COUNT(*)) OVER (PARTITION BY cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint),cast(floor(precalculate_pixely *1048576/8) *8 AS bigint)) AS nsamples  FROM dfs.\`ericsson-1048\`  WHERE global_cellid IS NOT NULL   AND serving_rsrp_mr IS NOT NULL   GROUP BY  px           ,py           ,global_cellid  HAVING AVG(serving_rsrp_mr) IS NOT NULL AND MIN(serving_pci) IS NOT NULL ) AS t WHERE t.pos = 1;"
"SELECT  DISTINCT px        ,py        ,value        ,nsamples FROM  (  SELECT  cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *1048576/8) *8  AS bigint) AS py         ,MIN(serving_pci)                                          AS value         ,rank() OVER (PARTITION BY cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint),cast(floor(precalculate_pixely *1048576/8) *8 AS bigint) ORDER BY AVG(serving_rsrp_mr) DESC,MIN(serving_pci) DESC) AS pos         ,SUM(COUNT(*)) OVER (PARTITION BY cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint),cast(floor(precalculate_pixely *1048576/8) *8 AS bigint)) AS nsamples  FROM dfs.\`ericsson-1088\`  WHERE global_cellid IS NOT NULL   AND serving_rsrp_mr IS NOT NULL   GROUP BY  px           ,py           ,global_cellid  HAVING AVG(serving_rsrp_mr) IS NOT NULL AND MIN(serving_pci) IS NOT NULL ) AS t WHERE t.pos = 1;"
"SELECT  DISTINCT px        ,py        ,value        ,nsamples FROM  (  SELECT  cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *1048576/8) *8  AS bigint) AS py         ,MIN(serving_pci)                                          AS value         ,rank() OVER (PARTITION BY cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint),cast(floor(precalculate_pixely *1048576/8) *8 AS bigint) ORDER BY AVG(serving_rsrp_mr) DESC,MIN(serving_pci) DESC) AS pos         ,SUM(COUNT(*)) OVER (PARTITION BY cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint),cast(floor(precalculate_pixely *1048576/8) *8 AS bigint)) AS nsamples  FROM dfs.\`ericsson-1088\`  WHERE global_cellid IS NOT NULL   AND serving_rsrp_mr IS NOT NULL   GROUP BY  px           ,py           ,global_cellid  HAVING AVG(serving_rsrp_mr) IS NOT NULL AND MIN(serving_pci) IS NOT NULL ) AS t WHERE t.pos = 1;"
"SELECT  DISTINCT px        ,py        ,value        ,nsamples FROM  (  SELECT  cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *1048576/8) *8  AS bigint) AS py         ,MIN(serving_pci)                                          AS value         ,rank() OVER (PARTITION BY cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint),cast(floor(precalculate_pixely *1048576/8) *8 AS bigint) ORDER BY AVG(serving_rsrp_mr) DESC,MIN(serving_pci) DESC) AS pos         ,SUM(COUNT(*)) OVER (PARTITION BY cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint),cast(floor(precalculate_pixely *1048576/8) *8 AS bigint)) AS nsamples  FROM dfs.\`ericsson-1128\`  WHERE global_cellid IS NOT NULL   AND serving_rsrp_mr IS NOT NULL   GROUP BY  px           ,py           ,global_cellid  HAVING AVG(serving_rsrp_mr) IS NOT NULL AND MIN(serving_pci) IS NOT NULL ) AS t WHERE t.pos = 1;"
"SELECT  DISTINCT px        ,py        ,value        ,nsamples FROM  (  SELECT  cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *1048576/8) *8  AS bigint) AS py         ,MIN(serving_pci)                                          AS value         ,rank() OVER (PARTITION BY cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint),cast(floor(precalculate_pixely *1048576/8) *8 AS bigint) ORDER BY AVG(serving_rsrp_mr) DESC,MIN(serving_pci) DESC) AS pos         ,SUM(COUNT(*)) OVER (PARTITION BY cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint),cast(floor(precalculate_pixely *1048576/8) *8 AS bigint)) AS nsamples  FROM dfs.\`ericsson-1128\`  WHERE global_cellid IS NOT NULL   AND serving_rsrp_mr IS NOT NULL   GROUP BY  px           ,py           ,global_cellid  HAVING AVG(serving_rsrp_mr) IS NOT NULL AND MIN(serving_pci) IS NOT NULL ) AS t WHERE t.pos = 1;"
"SELECT  DISTINCT px        ,py        ,value        ,nsamples FROM  (  SELECT  cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *1048576/8) *8  AS bigint) AS py         ,MIN(serving_pci)                                          AS value         ,rank() OVER (PARTITION BY cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint),cast(floor(precalculate_pixely *1048576/8) *8 AS bigint) ORDER BY AVG(serving_rsrp_mr) DESC,MIN(serving_pci) DESC) AS pos         ,SUM(COUNT(*)) OVER (PARTITION BY cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint),cast(floor(precalculate_pixely *1048576/8) *8 AS bigint)) AS nsamples  FROM dfs.\`ericsson-2248\`  WHERE global_cellid IS NOT NULL   AND serving_rsrp_mr IS NOT NULL   GROUP BY  px           ,py           ,global_cellid  HAVING AVG(serving_rsrp_mr) IS NOT NULL AND MIN(serving_pci) IS NOT NULL ) AS t WHERE t.pos = 1;"
"SELECT  DISTINCT px        ,py        ,value        ,nsamples FROM  (  SELECT  cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *1048576/8) *8  AS bigint) AS py         ,MIN(serving_pci)                                          AS value         ,rank() OVER (PARTITION BY cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint),cast(floor(precalculate_pixely *1048576/8) *8 AS bigint) ORDER BY AVG(serving_rsrp_mr) DESC,MIN(serving_pci) DESC) AS pos         ,SUM(COUNT(*)) OVER (PARTITION BY cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint),cast(floor(precalculate_pixely *1048576/8) *8 AS bigint)) AS nsamples  FROM dfs.\`ericsson-2248\`  WHERE global_cellid IS NOT NULL   AND serving_rsrp_mr IS NOT NULL   GROUP BY  px           ,py           ,global_cellid  HAVING AVG(serving_rsrp_mr) IS NOT NULL AND MIN(serving_pci) IS NOT NULL ) AS t WHERE t.pos = 1;"
"SELECT  DISTINCT px        ,py        ,value        ,nsamples FROM  (  SELECT  cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *1048576/8) *8  AS bigint) AS py         ,MIN(serving_pci)                                          AS value         ,rank() OVER (PARTITION BY cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint),cast(floor(precalculate_pixely *1048576/8) *8 AS bigint) ORDER BY AVG(serving_rsrp_mr) DESC,MIN(serving_pci) DESC) AS pos         ,SUM(COUNT(*)) OVER (PARTITION BY cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint),cast(floor(precalculate_pixely *1048576/8) *8 AS bigint)) AS nsamples  FROM dfs.\`ericsson-2488\`  WHERE global_cellid IS NOT NULL   AND serving_rsrp_mr IS NOT NULL   GROUP BY  px           ,py           ,global_cellid  HAVING AVG(serving_rsrp_mr) IS NOT NULL AND MIN(serving_pci) IS NOT NULL ) AS t WHERE t.pos = 1;"
"SELECT  DISTINCT px        ,py        ,value        ,nsamples FROM  (  SELECT  cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *1048576/8) *8  AS bigint) AS py         ,MIN(serving_pci)                                          AS value         ,rank() OVER (PARTITION BY cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint),cast(floor(precalculate_pixely *1048576/8) *8 AS bigint) ORDER BY AVG(serving_rsrp_mr) DESC,MIN(serving_pci) DESC) AS pos         ,SUM(COUNT(*)) OVER (PARTITION BY cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint),cast(floor(precalculate_pixely *1048576/8) *8 AS bigint)) AS nsamples  FROM dfs.\`ericsson-2488\`  WHERE global_cellid IS NOT NULL   AND serving_rsrp_mr IS NOT NULL   GROUP BY  px           ,py           ,global_cellid  HAVING AVG(serving_rsrp_mr) IS NOT NULL AND MIN(serving_pci) IS NOT NULL ) AS t WHERE t.pos = 1;"
"SELECT  DISTINCT px        ,py        ,value        ,nsamples FROM  (  SELECT  cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *1048576/8) *8  AS bigint) AS py         ,MIN(serving_pci)                                          AS value         ,rank() OVER (PARTITION BY cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint),cast(floor(precalculate_pixely *1048576/8) *8 AS bigint) ORDER BY AVG(serving_rsrp_mr) DESC,MIN(serving_pci) DESC) AS pos         ,SUM(COUNT(*)) OVER (PARTITION BY cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint),cast(floor(precalculate_pixely *1048576/8) *8 AS bigint)) AS nsamples  FROM dfs.\`ericsson-1668\`  WHERE global_cellid IS NOT NULL   AND serving_rsrp_mr IS NOT NULL   GROUP BY  px           ,py           ,global_cellid  HAVING AVG(serving_rsrp_mr) IS NOT NULL AND MIN(serving_pci) IS NOT NULL ) AS t WHERE t.pos = 1;"
"SELECT  DISTINCT px        ,py        ,value        ,nsamples FROM  (  SELECT  cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *1048576/8) *8  AS bigint) AS py         ,MIN(serving_pci)                                          AS value         ,rank() OVER (PARTITION BY cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint),cast(floor(precalculate_pixely *1048576/8) *8 AS bigint) ORDER BY AVG(serving_rsrp_mr) DESC,MIN(serving_pci) DESC) AS pos         ,SUM(COUNT(*)) OVER (PARTITION BY cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint),cast(floor(precalculate_pixely *1048576/8) *8 AS bigint)) AS nsamples  FROM dfs.\`ericsson-1668\`  WHERE global_cellid IS NOT NULL   AND serving_rsrp_mr IS NOT NULL   GROUP BY  px           ,py           ,global_cellid  HAVING AVG(serving_rsrp_mr) IS NOT NULL AND MIN(serving_pci) IS NOT NULL ) AS t WHERE t.pos = 1;"
"SELECT  DISTINCT px        ,py        ,value        ,nsamples FROM  (  SELECT  cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *1048576/8) *8  AS bigint) AS py         ,MIN(serving_pci)                                          AS value         ,rank() OVER (PARTITION BY cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint),cast(floor(precalculate_pixely *1048576/8) *8 AS bigint) ORDER BY AVG(serving_rsrp_mr) DESC,MIN(serving_pci) DESC) AS pos         ,SUM(COUNT(*)) OVER (PARTITION BY cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint),cast(floor(precalculate_pixely *1048576/8) *8 AS bigint)) AS nsamples  FROM dfs.\`ericsson-partitioned-1011\`  WHERE global_cellid IS NOT NULL   AND serving_rsrp_mr IS NOT NULL   GROUP BY  px           ,py           ,global_cellid  HAVING AVG(serving_rsrp_mr) IS NOT NULL AND MIN(serving_pci) IS NOT NULL ) AS t WHERE t.pos = 1;"
"SELECT  DISTINCT px        ,py        ,value        ,nsamples FROM  (  SELECT  cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *1048576/8) *8  AS bigint) AS py         ,MIN(serving_pci)                                          AS value         ,rank() OVER (PARTITION BY cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint),cast(floor(precalculate_pixely *1048576/8) *8 AS bigint) ORDER BY AVG(serving_rsrp_mr) DESC,MIN(serving_pci) DESC) AS pos         ,SUM(COUNT(*)) OVER (PARTITION BY cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint),cast(floor(precalculate_pixely *1048576/8) *8 AS bigint)) AS nsamples  FROM dfs.\`ericsson-partitioned-1011\`  WHERE global_cellid IS NOT NULL   AND serving_rsrp_mr IS NOT NULL   GROUP BY  px           ,py           ,global_cellid  HAVING AVG(serving_rsrp_mr) IS NOT NULL AND MIN(serving_pci) IS NOT NULL ) AS t WHERE t.pos = 1;"
"SELECT  DISTINCT px        ,py        ,value        ,nsamples FROM  (  SELECT  cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *1048576/8) *8  AS bigint) AS py         ,MIN(serving_pci)                                          AS value         ,rank() OVER (PARTITION BY cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint),cast(floor(precalculate_pixely *1048576/8) *8 AS bigint) ORDER BY AVG(serving_rsrp_mr) DESC,MIN(serving_pci) DESC) AS pos         ,SUM(COUNT(*)) OVER (PARTITION BY cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint),cast(floor(precalculate_pixely *1048576/8) *8 AS bigint)) AS nsamples  FROM dfs.\`ericsson-partitioned-1021\`  WHERE global_cellid IS NOT NULL   AND serving_rsrp_mr IS NOT NULL   GROUP BY  px           ,py           ,global_cellid  HAVING AVG(serving_rsrp_mr) IS NOT NULL AND MIN(serving_pci) IS NOT NULL ) AS t WHERE t.pos = 1;"
"SELECT  DISTINCT px        ,py        ,value        ,nsamples FROM  (  SELECT  cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *1048576/8) *8  AS bigint) AS py         ,MIN(serving_pci)                                          AS value         ,rank() OVER (PARTITION BY cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint),cast(floor(precalculate_pixely *1048576/8) *8 AS bigint) ORDER BY AVG(serving_rsrp_mr) DESC,MIN(serving_pci) DESC) AS pos         ,SUM(COUNT(*)) OVER (PARTITION BY cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint),cast(floor(precalculate_pixely *1048576/8) *8 AS bigint)) AS nsamples  FROM dfs.\`ericsson-partitioned-1021\`  WHERE global_cellid IS NOT NULL   AND serving_rsrp_mr IS NOT NULL   GROUP BY  px           ,py           ,global_cellid  HAVING AVG(serving_rsrp_mr) IS NOT NULL AND MIN(serving_pci) IS NOT NULL ) AS t WHERE t.pos = 1;"
"SELECT  DISTINCT px        ,py        ,value        ,nsamples FROM  (  SELECT  cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *1048576/8) *8  AS bigint) AS py         ,MIN(serving_pci)                                          AS value         ,rank() OVER (PARTITION BY cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint),cast(floor(precalculate_pixely *1048576/8) *8 AS bigint) ORDER BY AVG(serving_rsrp_mr) DESC,MIN(serving_pci) DESC) AS pos         ,SUM(COUNT(*)) OVER (PARTITION BY cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint),cast(floor(precalculate_pixely *1048576/8) *8 AS bigint)) AS nsamples  FROM dfs.\`ericsson-partitioned-1041\`  WHERE global_cellid IS NOT NULL   AND serving_rsrp_mr IS NOT NULL   GROUP BY  px           ,py           ,global_cellid  HAVING AVG(serving_rsrp_mr) IS NOT NULL AND MIN(serving_pci) IS NOT NULL ) AS t WHERE t.pos = 1;"
"SELECT  DISTINCT px        ,py        ,value        ,nsamples FROM  (  SELECT  cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *1048576/8) *8  AS bigint) AS py         ,MIN(serving_pci)                                          AS value         ,rank() OVER (PARTITION BY cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint),cast(floor(precalculate_pixely *1048576/8) *8 AS bigint) ORDER BY AVG(serving_rsrp_mr) DESC,MIN(serving_pci) DESC) AS pos         ,SUM(COUNT(*)) OVER (PARTITION BY cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint),cast(floor(precalculate_pixely *1048576/8) *8 AS bigint)) AS nsamples  FROM dfs.\`ericsson-partitioned-1041\`  WHERE global_cellid IS NOT NULL   AND serving_rsrp_mr IS NOT NULL   GROUP BY  px           ,py           ,global_cellid  HAVING AVG(serving_rsrp_mr) IS NOT NULL AND MIN(serving_pci) IS NOT NULL ) AS t WHERE t.pos = 1;"
"SELECT  DISTINCT px        ,py        ,value        ,nsamples FROM  (  SELECT  cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *1048576/8) *8  AS bigint) AS py         ,MIN(serving_pci)                                          AS value         ,rank() OVER (PARTITION BY cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint),cast(floor(precalculate_pixely *1048576/8) *8 AS bigint) ORDER BY AVG(serving_rsrp_mr) DESC,MIN(serving_pci) DESC) AS pos         ,SUM(COUNT(*)) OVER (PARTITION BY cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint),cast(floor(precalculate_pixely *1048576/8) *8 AS bigint)) AS nsamples  FROM dfs.\`ericsson-partitioned-1081\`  WHERE global_cellid IS NOT NULL   AND serving_rsrp_mr IS NOT NULL   GROUP BY  px           ,py           ,global_cellid  HAVING AVG(serving_rsrp_mr) IS NOT NULL AND MIN(serving_pci) IS NOT NULL ) AS t WHERE t.pos = 1;"
"SELECT  DISTINCT px        ,py        ,value        ,nsamples FROM  (  SELECT  cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *1048576/8) *8  AS bigint) AS py         ,MIN(serving_pci)                                          AS value         ,rank() OVER (PARTITION BY cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint),cast(floor(precalculate_pixely *1048576/8) *8 AS bigint) ORDER BY AVG(serving_rsrp_mr) DESC,MIN(serving_pci) DESC) AS pos         ,SUM(COUNT(*)) OVER (PARTITION BY cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint),cast(floor(precalculate_pixely *1048576/8) *8 AS bigint)) AS nsamples  FROM dfs.\`ericsson-partitioned-1081\`  WHERE global_cellid IS NOT NULL   AND serving_rsrp_mr IS NOT NULL   GROUP BY  px           ,py           ,global_cellid  HAVING AVG(serving_rsrp_mr) IS NOT NULL AND MIN(serving_pci) IS NOT NULL ) AS t WHERE t.pos = 1;"
"SELECT  DISTINCT px        ,py        ,value        ,nsamples FROM  (  SELECT  cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *1048576/8) *8  AS bigint) AS py         ,MIN(serving_pci)                                          AS value         ,rank() OVER (PARTITION BY cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint),cast(floor(precalculate_pixely *1048576/8) *8 AS bigint) ORDER BY AVG(serving_rsrp_mr) DESC,MIN(serving_pci) DESC) AS pos         ,SUM(COUNT(*)) OVER (PARTITION BY cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint),cast(floor(precalculate_pixely *1048576/8) *8 AS bigint)) AS nsamples  FROM dfs.\`ericsson-partitioned-1121\`  WHERE global_cellid IS NOT NULL   AND serving_rsrp_mr IS NOT NULL   GROUP BY  px           ,py           ,global_cellid  HAVING AVG(serving_rsrp_mr) IS NOT NULL AND MIN(serving_pci) IS NOT NULL ) AS t WHERE t.pos = 1;"
"SELECT  DISTINCT px        ,py        ,value        ,nsamples FROM  (  SELECT  cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *1048576/8) *8  AS bigint) AS py         ,MIN(serving_pci)                                          AS value         ,rank() OVER (PARTITION BY cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint),cast(floor(precalculate_pixely *1048576/8) *8 AS bigint) ORDER BY AVG(serving_rsrp_mr) DESC,MIN(serving_pci) DESC) AS pos         ,SUM(COUNT(*)) OVER (PARTITION BY cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint),cast(floor(precalculate_pixely *1048576/8) *8 AS bigint)) AS nsamples  FROM dfs.\`ericsson-partitioned-1121\`  WHERE global_cellid IS NOT NULL   AND serving_rsrp_mr IS NOT NULL   GROUP BY  px           ,py           ,global_cellid  HAVING AVG(serving_rsrp_mr) IS NOT NULL AND MIN(serving_pci) IS NOT NULL ) AS t WHERE t.pos = 1;"
"SELECT  DISTINCT px        ,py        ,value        ,nsamples FROM  (  SELECT  cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *1048576/8) *8  AS bigint) AS py         ,MIN(serving_pci)                                          AS value         ,rank() OVER (PARTITION BY cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint),cast(floor(precalculate_pixely *1048576/8) *8 AS bigint) ORDER BY AVG(serving_rsrp_mr) DESC,MIN(serving_pci) DESC) AS pos         ,SUM(COUNT(*)) OVER (PARTITION BY cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint),cast(floor(precalculate_pixely *1048576/8) *8 AS bigint)) AS nsamples  FROM dfs.\`ericsson-partitioned-1241\`  WHERE global_cellid IS NOT NULL   AND serving_rsrp_mr IS NOT NULL   GROUP BY  px           ,py           ,global_cellid  HAVING AVG(serving_rsrp_mr) IS NOT NULL AND MIN(serving_pci) IS NOT NULL ) AS t WHERE t.pos = 1;"
"SELECT  DISTINCT px        ,py        ,value        ,nsamples FROM  (  SELECT  cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *1048576/8) *8  AS bigint) AS py         ,MIN(serving_pci)                                          AS value         ,rank() OVER (PARTITION BY cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint),cast(floor(precalculate_pixely *1048576/8) *8 AS bigint) ORDER BY AVG(serving_rsrp_mr) DESC,MIN(serving_pci) DESC) AS pos         ,SUM(COUNT(*)) OVER (PARTITION BY cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint),cast(floor(precalculate_pixely *1048576/8) *8 AS bigint)) AS nsamples  FROM dfs.\`ericsson-partitioned-1241\`  WHERE global_cellid IS NOT NULL   AND serving_rsrp_mr IS NOT NULL   GROUP BY  px           ,py           ,global_cellid  HAVING AVG(serving_rsrp_mr) IS NOT NULL AND MIN(serving_pci) IS NOT NULL ) AS t WHERE t.pos = 1;"
"SELECT  DISTINCT px        ,py        ,value        ,nsamples FROM  (  SELECT  cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *1048576/8) *8  AS bigint) AS py         ,MIN(serving_pci)                                          AS value         ,rank() OVER (PARTITION BY cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint),cast(floor(precalculate_pixely *1048576/8) *8 AS bigint) ORDER BY AVG(serving_rsrp_mr) DESC,MIN(serving_pci) DESC) AS pos         ,SUM(COUNT(*)) OVER (PARTITION BY cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint),cast(floor(precalculate_pixely *1048576/8) *8 AS bigint)) AS nsamples  FROM dfs.\`ericsson-partitioned-1481\`  WHERE global_cellid IS NOT NULL   AND serving_rsrp_mr IS NOT NULL   GROUP BY  px           ,py           ,global_cellid  HAVING AVG(serving_rsrp_mr) IS NOT NULL AND MIN(serving_pci) IS NOT NULL ) AS t WHERE t.pos = 1;"
"SELECT  DISTINCT px        ,py        ,value        ,nsamples FROM  (  SELECT  cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint) AS px         ,cast(floor(precalculate_pixely *1048576/8) *8  AS bigint) AS py         ,MIN(serving_pci)                                          AS value         ,rank() OVER (PARTITION BY cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint),cast(floor(precalculate_pixely *1048576/8) *8 AS bigint) ORDER BY AVG(serving_rsrp_mr) DESC,MIN(serving_pci) DESC) AS pos         ,SUM(COUNT(*)) OVER (PARTITION BY cast(floor(precalculate_pixelx * 1048576/8) *8 AS bigint),cast(floor(precalculate_pixely *1048576/8) *8 AS bigint)) AS nsamples  FROM dfs.\`ericsson-partitioned-1481\`  WHERE global_cellid IS NOT NULL   AND serving_rsrp_mr IS NOT NULL   GROUP BY  px           ,py           ,global_cellid  HAVING AVG(serving_rsrp_mr) IS NOT NULL AND MIN(serving_pci) IS NOT NULL ) AS t WHERE t.pos = 1;"
"SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px        ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py        ,SUM(COALESCE(dl_data_volume_0,0) + COALESCE(dl_data_volume_1,0) + COALESCE(dl_data_volume_2,0) + COALESCE(dl_data_volume_3,0) + COALESCE(dl_data_volume_4,0) + COALESCE(dl_data_volume_5,0) + COALESCE(dl_data_volume_6,0) + COALESCE(dl_data_volume_7,0) + COALESCE(dl_data_volume_8,0) + COALESCE(dl_data_volume_9,0)) AS value        ,COUNT(*)                                                  AS nsamples FROM dfs.\`ericsson-1011\` WHERE (dl_data_volume_0 IS NOT NULL OR dl_data_volume_1 IS NOT NULL OR dl_data_volume_2 IS NOT NULL OR dl_data_volume_3 IS NOT NULL OR dl_data_volume_4 IS NOT NULL OR dl_data_volume_5 IS NOT NULL OR dl_data_volume_6 IS NOT NULL OR dl_data_volume_7 IS NOT NULL OR dl_data_volume_8 IS NOT NULL OR dl_data_volume_9 IS NOT NULL)  GROUP BY  px          ,py HAVING SUM(COALESCE(dl_data_volume_0, 0) + COALESCE(dl_data_volume_1, 0) + COALESCE(dl_data_volume_2, 0) + COALESCE(dl_data_volume_3, 0) + COALESCE(dl_data_volume_4, 0) + COALESCE(dl_data_volume_5, 0) + COALESCE(dl_data_volume_6, 0) + COALESCE(dl_data_volume_7, 0) + COALESCE(dl_data_volume_8, 0) + COALESCE(dl_data_volume_9, 0)) IS NOT NULL;"
"SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px        ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py        ,SUM(COALESCE(dl_data_volume_0,0) + COALESCE(dl_data_volume_1,0) + COALESCE(dl_data_volume_2,0) + COALESCE(dl_data_volume_3,0) + COALESCE(dl_data_volume_4,0) + COALESCE(dl_data_volume_5,0) + COALESCE(dl_data_volume_6,0) + COALESCE(dl_data_volume_7,0) + COALESCE(dl_data_volume_8,0) + COALESCE(dl_data_volume_9,0)) AS value        ,COUNT(*)                                                  AS nsamples FROM dfs.\`ericsson-1011\` WHERE (dl_data_volume_0 IS NOT NULL OR dl_data_volume_1 IS NOT NULL OR dl_data_volume_2 IS NOT NULL OR dl_data_volume_3 IS NOT NULL OR dl_data_volume_4 IS NOT NULL OR dl_data_volume_5 IS NOT NULL OR dl_data_volume_6 IS NOT NULL OR dl_data_volume_7 IS NOT NULL OR dl_data_volume_8 IS NOT NULL OR dl_data_volume_9 IS NOT NULL)  GROUP BY  px          ,py HAVING SUM(COALESCE(dl_data_volume_0, 0) + COALESCE(dl_data_volume_1, 0) + COALESCE(dl_data_volume_2, 0) + COALESCE(dl_data_volume_3, 0) + COALESCE(dl_data_volume_4, 0) + COALESCE(dl_data_volume_5, 0) + COALESCE(dl_data_volume_6, 0) + COALESCE(dl_data_volume_7, 0) + COALESCE(dl_data_volume_8, 0) + COALESCE(dl_data_volume_9, 0)) IS NOT NULL;"
"SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px        ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py        ,SUM(COALESCE(dl_data_volume_0,0) + COALESCE(dl_data_volume_1,0) + COALESCE(dl_data_volume_2,0) + COALESCE(dl_data_volume_3,0) + COALESCE(dl_data_volume_4,0) + COALESCE(dl_data_volume_5,0) + COALESCE(dl_data_volume_6,0) + COALESCE(dl_data_volume_7,0) + COALESCE(dl_data_volume_8,0) + COALESCE(dl_data_volume_9,0)) AS value        ,COUNT(*)                                                  AS nsamples FROM dfs.\`ericsson-1041\` WHERE (dl_data_volume_0 IS NOT NULL OR dl_data_volume_1 IS NOT NULL OR dl_data_volume_2 IS NOT NULL OR dl_data_volume_3 IS NOT NULL OR dl_data_volume_4 IS NOT NULL OR dl_data_volume_5 IS NOT NULL OR dl_data_volume_6 IS NOT NULL OR dl_data_volume_7 IS NOT NULL OR dl_data_volume_8 IS NOT NULL OR dl_data_volume_9 IS NOT NULL)  GROUP BY  px          ,py HAVING SUM(COALESCE(dl_data_volume_0, 0) + COALESCE(dl_data_volume_1, 0) + COALESCE(dl_data_volume_2, 0) + COALESCE(dl_data_volume_3, 0) + COALESCE(dl_data_volume_4, 0) + COALESCE(dl_data_volume_5, 0) + COALESCE(dl_data_volume_6, 0) + COALESCE(dl_data_volume_7, 0) + COALESCE(dl_data_volume_8, 0) + COALESCE(dl_data_volume_9, 0)) IS NOT NULL;"
"SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px        ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py        ,SUM(COALESCE(dl_data_volume_0,0) + COALESCE(dl_data_volume_1,0) + COALESCE(dl_data_volume_2,0) + COALESCE(dl_data_volume_3,0) + COALESCE(dl_data_volume_4,0) + COALESCE(dl_data_volume_5,0) + COALESCE(dl_data_volume_6,0) + COALESCE(dl_data_volume_7,0) + COALESCE(dl_data_volume_8,0) + COALESCE(dl_data_volume_9,0)) AS value        ,COUNT(*)                                                  AS nsamples FROM dfs.\`ericsson-1041\` WHERE (dl_data_volume_0 IS NOT NULL OR dl_data_volume_1 IS NOT NULL OR dl_data_volume_2 IS NOT NULL OR dl_data_volume_3 IS NOT NULL OR dl_data_volume_4 IS NOT NULL OR dl_data_volume_5 IS NOT NULL OR dl_data_volume_6 IS NOT NULL OR dl_data_volume_7 IS NOT NULL OR dl_data_volume_8 IS NOT NULL OR dl_data_volume_9 IS NOT NULL)  GROUP BY  px          ,py HAVING SUM(COALESCE(dl_data_volume_0, 0) + COALESCE(dl_data_volume_1, 0) + COALESCE(dl_data_volume_2, 0) + COALESCE(dl_data_volume_3, 0) + COALESCE(dl_data_volume_4, 0) + COALESCE(dl_data_volume_5, 0) + COALESCE(dl_data_volume_6, 0) + COALESCE(dl_data_volume_7, 0) + COALESCE(dl_data_volume_8, 0) + COALESCE(dl_data_volume_9, 0)) IS NOT NULL;"
"SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px        ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py        ,SUM(COALESCE(dl_data_volume_0,0) + COALESCE(dl_data_volume_1,0) + COALESCE(dl_data_volume_2,0) + COALESCE(dl_data_volume_3,0) + COALESCE(dl_data_volume_4,0) + COALESCE(dl_data_volume_5,0) + COALESCE(dl_data_volume_6,0) + COALESCE(dl_data_volume_7,0) + COALESCE(dl_data_volume_8,0) + COALESCE(dl_data_volume_9,0)) AS value        ,COUNT(*)                                                  AS nsamples FROM dfs.\`ericsson-1081\` WHERE (dl_data_volume_0 IS NOT NULL OR dl_data_volume_1 IS NOT NULL OR dl_data_volume_2 IS NOT NULL OR dl_data_volume_3 IS NOT NULL OR dl_data_volume_4 IS NOT NULL OR dl_data_volume_5 IS NOT NULL OR dl_data_volume_6 IS NOT NULL OR dl_data_volume_7 IS NOT NULL OR dl_data_volume_8 IS NOT NULL OR dl_data_volume_9 IS NOT NULL)  GROUP BY  px          ,py HAVING SUM(COALESCE(dl_data_volume_0, 0) + COALESCE(dl_data_volume_1, 0) + COALESCE(dl_data_volume_2, 0) + COALESCE(dl_data_volume_3, 0) + COALESCE(dl_data_volume_4, 0) + COALESCE(dl_data_volume_5, 0) + COALESCE(dl_data_volume_6, 0) + COALESCE(dl_data_volume_7, 0) + COALESCE(dl_data_volume_8, 0) + COALESCE(dl_data_volume_9, 0)) IS NOT NULL;"
"SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px        ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py        ,SUM(COALESCE(dl_data_volume_0,0) + COALESCE(dl_data_volume_1,0) + COALESCE(dl_data_volume_2,0) + COALESCE(dl_data_volume_3,0) + COALESCE(dl_data_volume_4,0) + COALESCE(dl_data_volume_5,0) + COALESCE(dl_data_volume_6,0) + COALESCE(dl_data_volume_7,0) + COALESCE(dl_data_volume_8,0) + COALESCE(dl_data_volume_9,0)) AS value        ,COUNT(*)                                                  AS nsamples FROM dfs.\`ericsson-1081\` WHERE (dl_data_volume_0 IS NOT NULL OR dl_data_volume_1 IS NOT NULL OR dl_data_volume_2 IS NOT NULL OR dl_data_volume_3 IS NOT NULL OR dl_data_volume_4 IS NOT NULL OR dl_data_volume_5 IS NOT NULL OR dl_data_volume_6 IS NOT NULL OR dl_data_volume_7 IS NOT NULL OR dl_data_volume_8 IS NOT NULL OR dl_data_volume_9 IS NOT NULL)  GROUP BY  px          ,py HAVING SUM(COALESCE(dl_data_volume_0, 0) + COALESCE(dl_data_volume_1, 0) + COALESCE(dl_data_volume_2, 0) + COALESCE(dl_data_volume_3, 0) + COALESCE(dl_data_volume_4, 0) + COALESCE(dl_data_volume_5, 0) + COALESCE(dl_data_volume_6, 0) + COALESCE(dl_data_volume_7, 0) + COALESCE(dl_data_volume_8, 0) + COALESCE(dl_data_volume_9, 0)) IS NOT NULL;"
"SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px        ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py        ,SUM(COALESCE(dl_data_volume_0,0) + COALESCE(dl_data_volume_1,0) + COALESCE(dl_data_volume_2,0) + COALESCE(dl_data_volume_3,0) + COALESCE(dl_data_volume_4,0) + COALESCE(dl_data_volume_5,0) + COALESCE(dl_data_volume_6,0) + COALESCE(dl_data_volume_7,0) + COALESCE(dl_data_volume_8,0) + COALESCE(dl_data_volume_9,0)) AS value        ,COUNT(*)                                                  AS nsamples FROM dfs.\`ericsson-1121\` WHERE (dl_data_volume_0 IS NOT NULL OR dl_data_volume_1 IS NOT NULL OR dl_data_volume_2 IS NOT NULL OR dl_data_volume_3 IS NOT NULL OR dl_data_volume_4 IS NOT NULL OR dl_data_volume_5 IS NOT NULL OR dl_data_volume_6 IS NOT NULL OR dl_data_volume_7 IS NOT NULL OR dl_data_volume_8 IS NOT NULL OR dl_data_volume_9 IS NOT NULL)  GROUP BY  px          ,py HAVING SUM(COALESCE(dl_data_volume_0, 0) + COALESCE(dl_data_volume_1, 0) + COALESCE(dl_data_volume_2, 0) + COALESCE(dl_data_volume_3, 0) + COALESCE(dl_data_volume_4, 0) + COALESCE(dl_data_volume_5, 0) + COALESCE(dl_data_volume_6, 0) + COALESCE(dl_data_volume_7, 0) + COALESCE(dl_data_volume_8, 0) + COALESCE(dl_data_volume_9, 0)) IS NOT NULL;"
"SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px        ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py        ,SUM(COALESCE(dl_data_volume_0,0) + COALESCE(dl_data_volume_1,0) + COALESCE(dl_data_volume_2,0) + COALESCE(dl_data_volume_3,0) + COALESCE(dl_data_volume_4,0) + COALESCE(dl_data_volume_5,0) + COALESCE(dl_data_volume_6,0) + COALESCE(dl_data_volume_7,0) + COALESCE(dl_data_volume_8,0) + COALESCE(dl_data_volume_9,0)) AS value        ,COUNT(*)                                                  AS nsamples FROM dfs.\`ericsson-1121\` WHERE (dl_data_volume_0 IS NOT NULL OR dl_data_volume_1 IS NOT NULL OR dl_data_volume_2 IS NOT NULL OR dl_data_volume_3 IS NOT NULL OR dl_data_volume_4 IS NOT NULL OR dl_data_volume_5 IS NOT NULL OR dl_data_volume_6 IS NOT NULL OR dl_data_volume_7 IS NOT NULL OR dl_data_volume_8 IS NOT NULL OR dl_data_volume_9 IS NOT NULL)  GROUP BY  px          ,py HAVING SUM(COALESCE(dl_data_volume_0, 0) + COALESCE(dl_data_volume_1, 0) + COALESCE(dl_data_volume_2, 0) + COALESCE(dl_data_volume_3, 0) + COALESCE(dl_data_volume_4, 0) + COALESCE(dl_data_volume_5, 0) + COALESCE(dl_data_volume_6, 0) + COALESCE(dl_data_volume_7, 0) + COALESCE(dl_data_volume_8, 0) + COALESCE(dl_data_volume_9, 0)) IS NOT NULL;"
"SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px        ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py        ,SUM(COALESCE(dl_data_volume_0,0) + COALESCE(dl_data_volume_1,0) + COALESCE(dl_data_volume_2,0) + COALESCE(dl_data_volume_3,0) + COALESCE(dl_data_volume_4,0) + COALESCE(dl_data_volume_5,0) + COALESCE(dl_data_volume_6,0) + COALESCE(dl_data_volume_7,0) + COALESCE(dl_data_volume_8,0) + COALESCE(dl_data_volume_9,0)) AS value        ,COUNT(*)                                                  AS nsamples FROM dfs.\`ericsson-1241\` WHERE (dl_data_volume_0 IS NOT NULL OR dl_data_volume_1 IS NOT NULL OR dl_data_volume_2 IS NOT NULL OR dl_data_volume_3 IS NOT NULL OR dl_data_volume_4 IS NOT NULL OR dl_data_volume_5 IS NOT NULL OR dl_data_volume_6 IS NOT NULL OR dl_data_volume_7 IS NOT NULL OR dl_data_volume_8 IS NOT NULL OR dl_data_volume_9 IS NOT NULL)  GROUP BY  px          ,py HAVING SUM(COALESCE(dl_data_volume_0, 0) + COALESCE(dl_data_volume_1, 0) + COALESCE(dl_data_volume_2, 0) + COALESCE(dl_data_volume_3, 0) + COALESCE(dl_data_volume_4, 0) + COALESCE(dl_data_volume_5, 0) + COALESCE(dl_data_volume_6, 0) + COALESCE(dl_data_volume_7, 0) + COALESCE(dl_data_volume_8, 0) + COALESCE(dl_data_volume_9, 0)) IS NOT NULL;"
"SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px        ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py        ,SUM(COALESCE(dl_data_volume_0,0) + COALESCE(dl_data_volume_1,0) + COALESCE(dl_data_volume_2,0) + COALESCE(dl_data_volume_3,0) + COALESCE(dl_data_volume_4,0) + COALESCE(dl_data_volume_5,0) + COALESCE(dl_data_volume_6,0) + COALESCE(dl_data_volume_7,0) + COALESCE(dl_data_volume_8,0) + COALESCE(dl_data_volume_9,0)) AS value        ,COUNT(*)                                                  AS nsamples FROM dfs.\`ericsson-1241\` WHERE (dl_data_volume_0 IS NOT NULL OR dl_data_volume_1 IS NOT NULL OR dl_data_volume_2 IS NOT NULL OR dl_data_volume_3 IS NOT NULL OR dl_data_volume_4 IS NOT NULL OR dl_data_volume_5 IS NOT NULL OR dl_data_volume_6 IS NOT NULL OR dl_data_volume_7 IS NOT NULL OR dl_data_volume_8 IS NOT NULL OR dl_data_volume_9 IS NOT NULL)  GROUP BY  px          ,py HAVING SUM(COALESCE(dl_data_volume_0, 0) + COALESCE(dl_data_volume_1, 0) + COALESCE(dl_data_volume_2, 0) + COALESCE(dl_data_volume_3, 0) + COALESCE(dl_data_volume_4, 0) + COALESCE(dl_data_volume_5, 0) + COALESCE(dl_data_volume_6, 0) + COALESCE(dl_data_volume_7, 0) + COALESCE(dl_data_volume_8, 0) + COALESCE(dl_data_volume_9, 0)) IS NOT NULL;"
"SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px        ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py        ,SUM(COALESCE(dl_data_volume_0,0) + COALESCE(dl_data_volume_1,0) + COALESCE(dl_data_volume_2,0) + COALESCE(dl_data_volume_3,0) + COALESCE(dl_data_volume_4,0) + COALESCE(dl_data_volume_5,0) + COALESCE(dl_data_volume_6,0) + COALESCE(dl_data_volume_7,0) + COALESCE(dl_data_volume_8,0) + COALESCE(dl_data_volume_9,0)) AS value        ,COUNT(*)                                                  AS nsamples FROM dfs.\`ericsson-1481\` WHERE (dl_data_volume_0 IS NOT NULL OR dl_data_volume_1 IS NOT NULL OR dl_data_volume_2 IS NOT NULL OR dl_data_volume_3 IS NOT NULL OR dl_data_volume_4 IS NOT NULL OR dl_data_volume_5 IS NOT NULL OR dl_data_volume_6 IS NOT NULL OR dl_data_volume_7 IS NOT NULL OR dl_data_volume_8 IS NOT NULL OR dl_data_volume_9 IS NOT NULL)  GROUP BY  px          ,py HAVING SUM(COALESCE(dl_data_volume_0, 0) + COALESCE(dl_data_volume_1, 0) + COALESCE(dl_data_volume_2, 0) + COALESCE(dl_data_volume_3, 0) + COALESCE(dl_data_volume_4, 0) + COALESCE(dl_data_volume_5, 0) + COALESCE(dl_data_volume_6, 0) + COALESCE(dl_data_volume_7, 0) + COALESCE(dl_data_volume_8, 0) + COALESCE(dl_data_volume_9, 0)) IS NOT NULL;"
"SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px        ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py        ,SUM(COALESCE(dl_data_volume_0,0) + COALESCE(dl_data_volume_1,0) + COALESCE(dl_data_volume_2,0) + COALESCE(dl_data_volume_3,0) + COALESCE(dl_data_volume_4,0) + COALESCE(dl_data_volume_5,0) + COALESCE(dl_data_volume_6,0) + COALESCE(dl_data_volume_7,0) + COALESCE(dl_data_volume_8,0) + COALESCE(dl_data_volume_9,0)) AS value        ,COUNT(*)                                                  AS nsamples FROM dfs.\`ericsson-1481\` WHERE (dl_data_volume_0 IS NOT NULL OR dl_data_volume_1 IS NOT NULL OR dl_data_volume_2 IS NOT NULL OR dl_data_volume_3 IS NOT NULL OR dl_data_volume_4 IS NOT NULL OR dl_data_volume_5 IS NOT NULL OR dl_data_volume_6 IS NOT NULL OR dl_data_volume_7 IS NOT NULL OR dl_data_volume_8 IS NOT NULL OR dl_data_volume_9 IS NOT NULL)  GROUP BY  px          ,py HAVING SUM(COALESCE(dl_data_volume_0, 0) + COALESCE(dl_data_volume_1, 0) + COALESCE(dl_data_volume_2, 0) + COALESCE(dl_data_volume_3, 0) + COALESCE(dl_data_volume_4, 0) + COALESCE(dl_data_volume_5, 0) + COALESCE(dl_data_volume_6, 0) + COALESCE(dl_data_volume_7, 0) + COALESCE(dl_data_volume_8, 0) + COALESCE(dl_data_volume_9, 0)) IS NOT NULL;"
"SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px        ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py        ,SUM(COALESCE(dl_data_volume_0,0) + COALESCE(dl_data_volume_1,0) + COALESCE(dl_data_volume_2,0) + COALESCE(dl_data_volume_3,0) + COALESCE(dl_data_volume_4,0) + COALESCE(dl_data_volume_5,0) + COALESCE(dl_data_volume_6,0) + COALESCE(dl_data_volume_7,0) + COALESCE(dl_data_volume_8,0) + COALESCE(dl_data_volume_9,0)) AS value        ,COUNT(*)                                                  AS nsamples FROM dfs.\`ericsson-1661\` WHERE (dl_data_volume_0 IS NOT NULL OR dl_data_volume_1 IS NOT NULL OR dl_data_volume_2 IS NOT NULL OR dl_data_volume_3 IS NOT NULL OR dl_data_volume_4 IS NOT NULL OR dl_data_volume_5 IS NOT NULL OR dl_data_volume_6 IS NOT NULL OR dl_data_volume_7 IS NOT NULL OR dl_data_volume_8 IS NOT NULL OR dl_data_volume_9 IS NOT NULL)  GROUP BY  px          ,py HAVING SUM(COALESCE(dl_data_volume_0, 0) + COALESCE(dl_data_volume_1, 0) + COALESCE(dl_data_volume_2, 0) + COALESCE(dl_data_volume_3, 0) + COALESCE(dl_data_volume_4, 0) + COALESCE(dl_data_volume_5, 0) + COALESCE(dl_data_volume_6, 0) + COALESCE(dl_data_volume_7, 0) + COALESCE(dl_data_volume_8, 0) + COALESCE(dl_data_volume_9, 0)) IS NOT NULL;"
"SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px        ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py        ,SUM(COALESCE(dl_data_volume_0,0) + COALESCE(dl_data_volume_1,0) + COALESCE(dl_data_volume_2,0) + COALESCE(dl_data_volume_3,0) + COALESCE(dl_data_volume_4,0) + COALESCE(dl_data_volume_5,0) + COALESCE(dl_data_volume_6,0) + COALESCE(dl_data_volume_7,0) + COALESCE(dl_data_volume_8,0) + COALESCE(dl_data_volume_9,0)) AS value        ,COUNT(*)                                                  AS nsamples FROM dfs.\`ericsson-1661\` WHERE (dl_data_volume_0 IS NOT NULL OR dl_data_volume_1 IS NOT NULL OR dl_data_volume_2 IS NOT NULL OR dl_data_volume_3 IS NOT NULL OR dl_data_volume_4 IS NOT NULL OR dl_data_volume_5 IS NOT NULL OR dl_data_volume_6 IS NOT NULL OR dl_data_volume_7 IS NOT NULL OR dl_data_volume_8 IS NOT NULL OR dl_data_volume_9 IS NOT NULL)  GROUP BY  px          ,py HAVING SUM(COALESCE(dl_data_volume_0, 0) + COALESCE(dl_data_volume_1, 0) + COALESCE(dl_data_volume_2, 0) + COALESCE(dl_data_volume_3, 0) + COALESCE(dl_data_volume_4, 0) + COALESCE(dl_data_volume_5, 0) + COALESCE(dl_data_volume_6, 0) + COALESCE(dl_data_volume_7, 0) + COALESCE(dl_data_volume_8, 0) + COALESCE(dl_data_volume_9, 0)) IS NOT NULL;"
"SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px        ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py        ,SUM(COALESCE(dl_data_volume_0,0) + COALESCE(dl_data_volume_1,0) + COALESCE(dl_data_volume_2,0) + COALESCE(dl_data_volume_3,0) + COALESCE(dl_data_volume_4,0) + COALESCE(dl_data_volume_5,0) + COALESCE(dl_data_volume_6,0) + COALESCE(dl_data_volume_7,0) + COALESCE(dl_data_volume_8,0) + COALESCE(dl_data_volume_9,0)) AS value        ,COUNT(*)                                                  AS nsamples FROM dfs.\`ericsson-partitioned-1011\` WHERE (dl_data_volume_0 IS NOT NULL OR dl_data_volume_1 IS NOT NULL OR dl_data_volume_2 IS NOT NULL OR dl_data_volume_3 IS NOT NULL OR dl_data_volume_4 IS NOT NULL OR dl_data_volume_5 IS NOT NULL OR dl_data_volume_6 IS NOT NULL OR dl_data_volume_7 IS NOT NULL OR dl_data_volume_8 IS NOT NULL OR dl_data_volume_9 IS NOT NULL)  GROUP BY  px          ,py HAVING SUM(COALESCE(dl_data_volume_0, 0) + COALESCE(dl_data_volume_1, 0) + COALESCE(dl_data_volume_2, 0) + COALESCE(dl_data_volume_3, 0) + COALESCE(dl_data_volume_4, 0) + COALESCE(dl_data_volume_5, 0) + COALESCE(dl_data_volume_6, 0) + COALESCE(dl_data_volume_7, 0) + COALESCE(dl_data_volume_8, 0) + COALESCE(dl_data_volume_9, 0)) IS NOT NULL;"
"SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px        ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py        ,SUM(COALESCE(dl_data_volume_0,0) + COALESCE(dl_data_volume_1,0) + COALESCE(dl_data_volume_2,0) + COALESCE(dl_data_volume_3,0) + COALESCE(dl_data_volume_4,0) + COALESCE(dl_data_volume_5,0) + COALESCE(dl_data_volume_6,0) + COALESCE(dl_data_volume_7,0) + COALESCE(dl_data_volume_8,0) + COALESCE(dl_data_volume_9,0)) AS value        ,COUNT(*)                                                  AS nsamples FROM dfs.\`ericsson-partitioned-1011\` WHERE (dl_data_volume_0 IS NOT NULL OR dl_data_volume_1 IS NOT NULL OR dl_data_volume_2 IS NOT NULL OR dl_data_volume_3 IS NOT NULL OR dl_data_volume_4 IS NOT NULL OR dl_data_volume_5 IS NOT NULL OR dl_data_volume_6 IS NOT NULL OR dl_data_volume_7 IS NOT NULL OR dl_data_volume_8 IS NOT NULL OR dl_data_volume_9 IS NOT NULL)  GROUP BY  px          ,py HAVING SUM(COALESCE(dl_data_volume_0, 0) + COALESCE(dl_data_volume_1, 0) + COALESCE(dl_data_volume_2, 0) + COALESCE(dl_data_volume_3, 0) + COALESCE(dl_data_volume_4, 0) + COALESCE(dl_data_volume_5, 0) + COALESCE(dl_data_volume_6, 0) + COALESCE(dl_data_volume_7, 0) + COALESCE(dl_data_volume_8, 0) + COALESCE(dl_data_volume_9, 0)) IS NOT NULL;"
"SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px        ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py        ,SUM(COALESCE(dl_data_volume_0,0) + COALESCE(dl_data_volume_1,0) + COALESCE(dl_data_volume_2,0) + COALESCE(dl_data_volume_3,0) + COALESCE(dl_data_volume_4,0) + COALESCE(dl_data_volume_5,0) + COALESCE(dl_data_volume_6,0) + COALESCE(dl_data_volume_7,0) + COALESCE(dl_data_volume_8,0) + COALESCE(dl_data_volume_9,0)) AS value        ,COUNT(*)                                                  AS nsamples FROM dfs.\`ericsson-partitioned-1021\` WHERE (dl_data_volume_0 IS NOT NULL OR dl_data_volume_1 IS NOT NULL OR dl_data_volume_2 IS NOT NULL OR dl_data_volume_3 IS NOT NULL OR dl_data_volume_4 IS NOT NULL OR dl_data_volume_5 IS NOT NULL OR dl_data_volume_6 IS NOT NULL OR dl_data_volume_7 IS NOT NULL OR dl_data_volume_8 IS NOT NULL OR dl_data_volume_9 IS NOT NULL)  GROUP BY  px          ,py HAVING SUM(COALESCE(dl_data_volume_0, 0) + COALESCE(dl_data_volume_1, 0) + COALESCE(dl_data_volume_2, 0) + COALESCE(dl_data_volume_3, 0) + COALESCE(dl_data_volume_4, 0) + COALESCE(dl_data_volume_5, 0) + COALESCE(dl_data_volume_6, 0) + COALESCE(dl_data_volume_7, 0) + COALESCE(dl_data_volume_8, 0) + COALESCE(dl_data_volume_9, 0)) IS NOT NULL;"
"SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px        ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py        ,SUM(COALESCE(dl_data_volume_0,0) + COALESCE(dl_data_volume_1,0) + COALESCE(dl_data_volume_2,0) + COALESCE(dl_data_volume_3,0) + COALESCE(dl_data_volume_4,0) + COALESCE(dl_data_volume_5,0) + COALESCE(dl_data_volume_6,0) + COALESCE(dl_data_volume_7,0) + COALESCE(dl_data_volume_8,0) + COALESCE(dl_data_volume_9,0)) AS value        ,COUNT(*)                                                  AS nsamples FROM dfs.\`ericsson-partitioned-1021\` WHERE (dl_data_volume_0 IS NOT NULL OR dl_data_volume_1 IS NOT NULL OR dl_data_volume_2 IS NOT NULL OR dl_data_volume_3 IS NOT NULL OR dl_data_volume_4 IS NOT NULL OR dl_data_volume_5 IS NOT NULL OR dl_data_volume_6 IS NOT NULL OR dl_data_volume_7 IS NOT NULL OR dl_data_volume_8 IS NOT NULL OR dl_data_volume_9 IS NOT NULL)  GROUP BY  px          ,py HAVING SUM(COALESCE(dl_data_volume_0, 0) + COALESCE(dl_data_volume_1, 0) + COALESCE(dl_data_volume_2, 0) + COALESCE(dl_data_volume_3, 0) + COALESCE(dl_data_volume_4, 0) + COALESCE(dl_data_volume_5, 0) + COALESCE(dl_data_volume_6, 0) + COALESCE(dl_data_volume_7, 0) + COALESCE(dl_data_volume_8, 0) + COALESCE(dl_data_volume_9, 0)) IS NOT NULL;"
"SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px        ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py        ,SUM(COALESCE(dl_data_volume_0,0) + COALESCE(dl_data_volume_1,0) + COALESCE(dl_data_volume_2,0) + COALESCE(dl_data_volume_3,0) + COALESCE(dl_data_volume_4,0) + COALESCE(dl_data_volume_5,0) + COALESCE(dl_data_volume_6,0) + COALESCE(dl_data_volume_7,0) + COALESCE(dl_data_volume_8,0) + COALESCE(dl_data_volume_9,0)) AS value        ,COUNT(*)                                                  AS nsamples FROM dfs.\`ericsson-partitioned-1041\` WHERE (dl_data_volume_0 IS NOT NULL OR dl_data_volume_1 IS NOT NULL OR dl_data_volume_2 IS NOT NULL OR dl_data_volume_3 IS NOT NULL OR dl_data_volume_4 IS NOT NULL OR dl_data_volume_5 IS NOT NULL OR dl_data_volume_6 IS NOT NULL OR dl_data_volume_7 IS NOT NULL OR dl_data_volume_8 IS NOT NULL OR dl_data_volume_9 IS NOT NULL)  GROUP BY  px          ,py HAVING SUM(COALESCE(dl_data_volume_0, 0) + COALESCE(dl_data_volume_1, 0) + COALESCE(dl_data_volume_2, 0) + COALESCE(dl_data_volume_3, 0) + COALESCE(dl_data_volume_4, 0) + COALESCE(dl_data_volume_5, 0) + COALESCE(dl_data_volume_6, 0) + COALESCE(dl_data_volume_7, 0) + COALESCE(dl_data_volume_8, 0) + COALESCE(dl_data_volume_9, 0)) IS NOT NULL;"
"SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px        ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py        ,SUM(COALESCE(dl_data_volume_0,0) + COALESCE(dl_data_volume_1,0) + COALESCE(dl_data_volume_2,0) + COALESCE(dl_data_volume_3,0) + COALESCE(dl_data_volume_4,0) + COALESCE(dl_data_volume_5,0) + COALESCE(dl_data_volume_6,0) + COALESCE(dl_data_volume_7,0) + COALESCE(dl_data_volume_8,0) + COALESCE(dl_data_volume_9,0)) AS value        ,COUNT(*)                                                  AS nsamples FROM dfs.\`ericsson-partitioned-1041\` WHERE (dl_data_volume_0 IS NOT NULL OR dl_data_volume_1 IS NOT NULL OR dl_data_volume_2 IS NOT NULL OR dl_data_volume_3 IS NOT NULL OR dl_data_volume_4 IS NOT NULL OR dl_data_volume_5 IS NOT NULL OR dl_data_volume_6 IS NOT NULL OR dl_data_volume_7 IS NOT NULL OR dl_data_volume_8 IS NOT NULL OR dl_data_volume_9 IS NOT NULL)  GROUP BY  px          ,py HAVING SUM(COALESCE(dl_data_volume_0, 0) + COALESCE(dl_data_volume_1, 0) + COALESCE(dl_data_volume_2, 0) + COALESCE(dl_data_volume_3, 0) + COALESCE(dl_data_volume_4, 0) + COALESCE(dl_data_volume_5, 0) + COALESCE(dl_data_volume_6, 0) + COALESCE(dl_data_volume_7, 0) + COALESCE(dl_data_volume_8, 0) + COALESCE(dl_data_volume_9, 0)) IS NOT NULL;"
"SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px        ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py        ,SUM(COALESCE(dl_data_volume_0,0) + COALESCE(dl_data_volume_1,0) + COALESCE(dl_data_volume_2,0) + COALESCE(dl_data_volume_3,0) + COALESCE(dl_data_volume_4,0) + COALESCE(dl_data_volume_5,0) + COALESCE(dl_data_volume_6,0) + COALESCE(dl_data_volume_7,0) + COALESCE(dl_data_volume_8,0) + COALESCE(dl_data_volume_9,0)) AS value        ,COUNT(*)                                                  AS nsamples FROM dfs.\`ericsson-partitioned-1081\` WHERE (dl_data_volume_0 IS NOT NULL OR dl_data_volume_1 IS NOT NULL OR dl_data_volume_2 IS NOT NULL OR dl_data_volume_3 IS NOT NULL OR dl_data_volume_4 IS NOT NULL OR dl_data_volume_5 IS NOT NULL OR dl_data_volume_6 IS NOT NULL OR dl_data_volume_7 IS NOT NULL OR dl_data_volume_8 IS NOT NULL OR dl_data_volume_9 IS NOT NULL)  GROUP BY  px          ,py HAVING SUM(COALESCE(dl_data_volume_0, 0) + COALESCE(dl_data_volume_1, 0) + COALESCE(dl_data_volume_2, 0) + COALESCE(dl_data_volume_3, 0) + COALESCE(dl_data_volume_4, 0) + COALESCE(dl_data_volume_5, 0) + COALESCE(dl_data_volume_6, 0) + COALESCE(dl_data_volume_7, 0) + COALESCE(dl_data_volume_8, 0) + COALESCE(dl_data_volume_9, 0)) IS NOT NULL;"
"SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px        ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py        ,SUM(COALESCE(dl_data_volume_0,0) + COALESCE(dl_data_volume_1,0) + COALESCE(dl_data_volume_2,0) + COALESCE(dl_data_volume_3,0) + COALESCE(dl_data_volume_4,0) + COALESCE(dl_data_volume_5,0) + COALESCE(dl_data_volume_6,0) + COALESCE(dl_data_volume_7,0) + COALESCE(dl_data_volume_8,0) + COALESCE(dl_data_volume_9,0)) AS value        ,COUNT(*)                                                  AS nsamples FROM dfs.\`ericsson-partitioned-1081\` WHERE (dl_data_volume_0 IS NOT NULL OR dl_data_volume_1 IS NOT NULL OR dl_data_volume_2 IS NOT NULL OR dl_data_volume_3 IS NOT NULL OR dl_data_volume_4 IS NOT NULL OR dl_data_volume_5 IS NOT NULL OR dl_data_volume_6 IS NOT NULL OR dl_data_volume_7 IS NOT NULL OR dl_data_volume_8 IS NOT NULL OR dl_data_volume_9 IS NOT NULL)  GROUP BY  px          ,py HAVING SUM(COALESCE(dl_data_volume_0, 0) + COALESCE(dl_data_volume_1, 0) + COALESCE(dl_data_volume_2, 0) + COALESCE(dl_data_volume_3, 0) + COALESCE(dl_data_volume_4, 0) + COALESCE(dl_data_volume_5, 0) + COALESCE(dl_data_volume_6, 0) + COALESCE(dl_data_volume_7, 0) + COALESCE(dl_data_volume_8, 0) + COALESCE(dl_data_volume_9, 0)) IS NOT NULL;"
"SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px        ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py        ,SUM(COALESCE(dl_data_volume_0,0) + COALESCE(dl_data_volume_1,0) + COALESCE(dl_data_volume_2,0) + COALESCE(dl_data_volume_3,0) + COALESCE(dl_data_volume_4,0) + COALESCE(dl_data_volume_5,0) + COALESCE(dl_data_volume_6,0) + COALESCE(dl_data_volume_7,0) + COALESCE(dl_data_volume_8,0) + COALESCE(dl_data_volume_9,0)) AS value        ,COUNT(*)                                                  AS nsamples FROM dfs.\`ericsson-partitioned-1121\` WHERE (dl_data_volume_0 IS NOT NULL OR dl_data_volume_1 IS NOT NULL OR dl_data_volume_2 IS NOT NULL OR dl_data_volume_3 IS NOT NULL OR dl_data_volume_4 IS NOT NULL OR dl_data_volume_5 IS NOT NULL OR dl_data_volume_6 IS NOT NULL OR dl_data_volume_7 IS NOT NULL OR dl_data_volume_8 IS NOT NULL OR dl_data_volume_9 IS NOT NULL)  GROUP BY  px          ,py HAVING SUM(COALESCE(dl_data_volume_0, 0) + COALESCE(dl_data_volume_1, 0) + COALESCE(dl_data_volume_2, 0) + COALESCE(dl_data_volume_3, 0) + COALESCE(dl_data_volume_4, 0) + COALESCE(dl_data_volume_5, 0) + COALESCE(dl_data_volume_6, 0) + COALESCE(dl_data_volume_7, 0) + COALESCE(dl_data_volume_8, 0) + COALESCE(dl_data_volume_9, 0)) IS NOT NULL;"
"SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px        ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py        ,SUM(COALESCE(dl_data_volume_0,0) + COALESCE(dl_data_volume_1,0) + COALESCE(dl_data_volume_2,0) + COALESCE(dl_data_volume_3,0) + COALESCE(dl_data_volume_4,0) + COALESCE(dl_data_volume_5,0) + COALESCE(dl_data_volume_6,0) + COALESCE(dl_data_volume_7,0) + COALESCE(dl_data_volume_8,0) + COALESCE(dl_data_volume_9,0)) AS value        ,COUNT(*)                                                  AS nsamples FROM dfs.\`ericsson-partitioned-1121\` WHERE (dl_data_volume_0 IS NOT NULL OR dl_data_volume_1 IS NOT NULL OR dl_data_volume_2 IS NOT NULL OR dl_data_volume_3 IS NOT NULL OR dl_data_volume_4 IS NOT NULL OR dl_data_volume_5 IS NOT NULL OR dl_data_volume_6 IS NOT NULL OR dl_data_volume_7 IS NOT NULL OR dl_data_volume_8 IS NOT NULL OR dl_data_volume_9 IS NOT NULL)  GROUP BY  px          ,py HAVING SUM(COALESCE(dl_data_volume_0, 0) + COALESCE(dl_data_volume_1, 0) + COALESCE(dl_data_volume_2, 0) + COALESCE(dl_data_volume_3, 0) + COALESCE(dl_data_volume_4, 0) + COALESCE(dl_data_volume_5, 0) + COALESCE(dl_data_volume_6, 0) + COALESCE(dl_data_volume_7, 0) + COALESCE(dl_data_volume_8, 0) + COALESCE(dl_data_volume_9, 0)) IS NOT NULL;"
"SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px        ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py        ,SUM(COALESCE(dl_data_volume_0,0) + COALESCE(dl_data_volume_1,0) + COALESCE(dl_data_volume_2,0) + COALESCE(dl_data_volume_3,0) + COALESCE(dl_data_volume_4,0) + COALESCE(dl_data_volume_5,0) + COALESCE(dl_data_volume_6,0) + COALESCE(dl_data_volume_7,0) + COALESCE(dl_data_volume_8,0) + COALESCE(dl_data_volume_9,0)) AS value        ,COUNT(*)                                                  AS nsamples FROM dfs.\`ericsson-partitioned-1241\` WHERE (dl_data_volume_0 IS NOT NULL OR dl_data_volume_1 IS NOT NULL OR dl_data_volume_2 IS NOT NULL OR dl_data_volume_3 IS NOT NULL OR dl_data_volume_4 IS NOT NULL OR dl_data_volume_5 IS NOT NULL OR dl_data_volume_6 IS NOT NULL OR dl_data_volume_7 IS NOT NULL OR dl_data_volume_8 IS NOT NULL OR dl_data_volume_9 IS NOT NULL)  GROUP BY  px          ,py HAVING SUM(COALESCE(dl_data_volume_0, 0) + COALESCE(dl_data_volume_1, 0) + COALESCE(dl_data_volume_2, 0) + COALESCE(dl_data_volume_3, 0) + COALESCE(dl_data_volume_4, 0) + COALESCE(dl_data_volume_5, 0) + COALESCE(dl_data_volume_6, 0) + COALESCE(dl_data_volume_7, 0) + COALESCE(dl_data_volume_8, 0) + COALESCE(dl_data_volume_9, 0)) IS NOT NULL;"
"SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px        ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py        ,SUM(COALESCE(dl_data_volume_0,0) + COALESCE(dl_data_volume_1,0) + COALESCE(dl_data_volume_2,0) + COALESCE(dl_data_volume_3,0) + COALESCE(dl_data_volume_4,0) + COALESCE(dl_data_volume_5,0) + COALESCE(dl_data_volume_6,0) + COALESCE(dl_data_volume_7,0) + COALESCE(dl_data_volume_8,0) + COALESCE(dl_data_volume_9,0)) AS value        ,COUNT(*)                                                  AS nsamples FROM dfs.\`ericsson-partitioned-1241\` WHERE (dl_data_volume_0 IS NOT NULL OR dl_data_volume_1 IS NOT NULL OR dl_data_volume_2 IS NOT NULL OR dl_data_volume_3 IS NOT NULL OR dl_data_volume_4 IS NOT NULL OR dl_data_volume_5 IS NOT NULL OR dl_data_volume_6 IS NOT NULL OR dl_data_volume_7 IS NOT NULL OR dl_data_volume_8 IS NOT NULL OR dl_data_volume_9 IS NOT NULL)  GROUP BY  px          ,py HAVING SUM(COALESCE(dl_data_volume_0, 0) + COALESCE(dl_data_volume_1, 0) + COALESCE(dl_data_volume_2, 0) + COALESCE(dl_data_volume_3, 0) + COALESCE(dl_data_volume_4, 0) + COALESCE(dl_data_volume_5, 0) + COALESCE(dl_data_volume_6, 0) + COALESCE(dl_data_volume_7, 0) + COALESCE(dl_data_volume_8, 0) + COALESCE(dl_data_volume_9, 0)) IS NOT NULL;"
"SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px        ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py        ,SUM(COALESCE(dl_data_volume_0,0) + COALESCE(dl_data_volume_1,0) + COALESCE(dl_data_volume_2,0) + COALESCE(dl_data_volume_3,0) + COALESCE(dl_data_volume_4,0) + COALESCE(dl_data_volume_5,0) + COALESCE(dl_data_volume_6,0) + COALESCE(dl_data_volume_7,0) + COALESCE(dl_data_volume_8,0) + COALESCE(dl_data_volume_9,0)) AS value        ,COUNT(*)                                                  AS nsamples FROM dfs.\`ericsson-partitioned-1481\` WHERE (dl_data_volume_0 IS NOT NULL OR dl_data_volume_1 IS NOT NULL OR dl_data_volume_2 IS NOT NULL OR dl_data_volume_3 IS NOT NULL OR dl_data_volume_4 IS NOT NULL OR dl_data_volume_5 IS NOT NULL OR dl_data_volume_6 IS NOT NULL OR dl_data_volume_7 IS NOT NULL OR dl_data_volume_8 IS NOT NULL OR dl_data_volume_9 IS NOT NULL)  GROUP BY  px          ,py HAVING SUM(COALESCE(dl_data_volume_0, 0) + COALESCE(dl_data_volume_1, 0) + COALESCE(dl_data_volume_2, 0) + COALESCE(dl_data_volume_3, 0) + COALESCE(dl_data_volume_4, 0) + COALESCE(dl_data_volume_5, 0) + COALESCE(dl_data_volume_6, 0) + COALESCE(dl_data_volume_7, 0) + COALESCE(dl_data_volume_8, 0) + COALESCE(dl_data_volume_9, 0)) IS NOT NULL;"
"SELECT  cast(floor(precalculate_pixelx * 4194304/8) *8 AS bigint) AS px        ,cast(floor(precalculate_pixely *4194304/8) *8  AS bigint) AS py        ,SUM(COALESCE(dl_data_volume_0,0) + COALESCE(dl_data_volume_1,0) + COALESCE(dl_data_volume_2,0) + COALESCE(dl_data_volume_3,0) + COALESCE(dl_data_volume_4,0) + COALESCE(dl_data_volume_5,0) + COALESCE(dl_data_volume_6,0) + COALESCE(dl_data_volume_7,0) + COALESCE(dl_data_volume_8,0) + COALESCE(dl_data_volume_9,0)) AS value        ,COUNT(*)                                                  AS nsamples FROM dfs.\`ericsson-partitioned-1481\` WHERE (dl_data_volume_0 IS NOT NULL OR dl_data_volume_1 IS NOT NULL OR dl_data_volume_2 IS NOT NULL OR dl_data_volume_3 IS NOT NULL OR dl_data_volume_4 IS NOT NULL OR dl_data_volume_5 IS NOT NULL OR dl_data_volume_6 IS NOT NULL OR dl_data_volume_7 IS NOT NULL OR dl_data_volume_8 IS NOT NULL OR dl_data_volume_9 IS NOT NULL)  GROUP BY  px          ,py HAVING SUM(COALESCE(dl_data_volume_0, 0) + COALESCE(dl_data_volume_1, 0) + COALESCE(dl_data_volume_2, 0) + COALESCE(dl_data_volume_3, 0) + COALESCE(dl_data_volume_4, 0) + COALESCE(dl_data_volume_5, 0) + COALESCE(dl_data_volume_6, 0) + COALESCE(dl_data_volume_7, 0) + COALESCE(dl_data_volume_8, 0) + COALESCE(dl_data_volume_9, 0)) IS NOT NULL;")